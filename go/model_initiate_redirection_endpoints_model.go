/*
splitit-web-api-v3

Splitit's Web API

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package splitit

import (
	"encoding/json"
)

// InitiateRedirectionEndpointsModel struct for InitiateRedirectionEndpointsModel
type InitiateRedirectionEndpointsModel struct {
	Succeeded *string `json:"Succeeded,omitempty"`
	Failed *string `json:"Failed,omitempty"`
	Cancel *string `json:"Cancel,omitempty"`
}

// NewInitiateRedirectionEndpointsModel instantiates a new InitiateRedirectionEndpointsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInitiateRedirectionEndpointsModel() *InitiateRedirectionEndpointsModel {
	this := InitiateRedirectionEndpointsModel{}
	return &this
}

// NewInitiateRedirectionEndpointsModelWithDefaults instantiates a new InitiateRedirectionEndpointsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInitiateRedirectionEndpointsModelWithDefaults() *InitiateRedirectionEndpointsModel {
	this := InitiateRedirectionEndpointsModel{}
	return &this
}

// GetSucceeded returns the Succeeded field value if set, zero value otherwise.
func (o *InitiateRedirectionEndpointsModel) GetSucceeded() string {
	if o == nil || isNil(o.Succeeded) {
		var ret string
		return ret
	}
	return *o.Succeeded
}

// GetSucceededOk returns a tuple with the Succeeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiateRedirectionEndpointsModel) GetSucceededOk() (*string, bool) {
	if o == nil || isNil(o.Succeeded) {
    return nil, false
	}
	return o.Succeeded, true
}

// HasSucceeded returns a boolean if a field has been set.
func (o *InitiateRedirectionEndpointsModel) HasSucceeded() bool {
	if o != nil && !isNil(o.Succeeded) {
		return true
	}

	return false
}

// SetSucceeded gets a reference to the given string and assigns it to the Succeeded field.
func (o *InitiateRedirectionEndpointsModel) SetSucceeded(v string) {
	o.Succeeded = &v
}

// GetFailed returns the Failed field value if set, zero value otherwise.
func (o *InitiateRedirectionEndpointsModel) GetFailed() string {
	if o == nil || isNil(o.Failed) {
		var ret string
		return ret
	}
	return *o.Failed
}

// GetFailedOk returns a tuple with the Failed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiateRedirectionEndpointsModel) GetFailedOk() (*string, bool) {
	if o == nil || isNil(o.Failed) {
    return nil, false
	}
	return o.Failed, true
}

// HasFailed returns a boolean if a field has been set.
func (o *InitiateRedirectionEndpointsModel) HasFailed() bool {
	if o != nil && !isNil(o.Failed) {
		return true
	}

	return false
}

// SetFailed gets a reference to the given string and assigns it to the Failed field.
func (o *InitiateRedirectionEndpointsModel) SetFailed(v string) {
	o.Failed = &v
}

// GetCancel returns the Cancel field value if set, zero value otherwise.
func (o *InitiateRedirectionEndpointsModel) GetCancel() string {
	if o == nil || isNil(o.Cancel) {
		var ret string
		return ret
	}
	return *o.Cancel
}

// GetCancelOk returns a tuple with the Cancel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiateRedirectionEndpointsModel) GetCancelOk() (*string, bool) {
	if o == nil || isNil(o.Cancel) {
    return nil, false
	}
	return o.Cancel, true
}

// HasCancel returns a boolean if a field has been set.
func (o *InitiateRedirectionEndpointsModel) HasCancel() bool {
	if o != nil && !isNil(o.Cancel) {
		return true
	}

	return false
}

// SetCancel gets a reference to the given string and assigns it to the Cancel field.
func (o *InitiateRedirectionEndpointsModel) SetCancel(v string) {
	o.Cancel = &v
}

func (o InitiateRedirectionEndpointsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Succeeded) {
		toSerialize["Succeeded"] = o.Succeeded
	}
	if !isNil(o.Failed) {
		toSerialize["Failed"] = o.Failed
	}
	if !isNil(o.Cancel) {
		toSerialize["Cancel"] = o.Cancel
	}
	return json.Marshal(toSerialize)
}

type NullableInitiateRedirectionEndpointsModel struct {
	value *InitiateRedirectionEndpointsModel
	isSet bool
}

func (v NullableInitiateRedirectionEndpointsModel) Get() *InitiateRedirectionEndpointsModel {
	return v.value
}

func (v *NullableInitiateRedirectionEndpointsModel) Set(val *InitiateRedirectionEndpointsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableInitiateRedirectionEndpointsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableInitiateRedirectionEndpointsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInitiateRedirectionEndpointsModel(val *InitiateRedirectionEndpointsModel) *NullableInitiateRedirectionEndpointsModel {
	return &NullableInitiateRedirectionEndpointsModel{value: val, isSet: true}
}

func (v NullableInitiateRedirectionEndpointsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInitiateRedirectionEndpointsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


