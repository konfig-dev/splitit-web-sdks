/*
splitit-web-api-v3

Splitit's Web API

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package splitit

import (
	"encoding/json"
)

// InstallmentPlanRefundRequest struct for InstallmentPlanRefundRequest
type InstallmentPlanRefundRequest struct {
	Amount float32 `json:"Amount"`
	RefundStrategy *RefundStrategy `json:"RefundStrategy,omitempty"`
	ReferenceId *string `json:"ReferenceId,omitempty"`
}

// NewInstallmentPlanRefundRequest instantiates a new InstallmentPlanRefundRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstallmentPlanRefundRequest(amount float32) *InstallmentPlanRefundRequest {
	this := InstallmentPlanRefundRequest{}
	this.Amount = amount
	return &this
}

// NewInstallmentPlanRefundRequestWithDefaults instantiates a new InstallmentPlanRefundRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstallmentPlanRefundRequestWithDefaults() *InstallmentPlanRefundRequest {
	this := InstallmentPlanRefundRequest{}
	return &this
}

// GetAmount returns the Amount field value
func (o *InstallmentPlanRefundRequest) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *InstallmentPlanRefundRequest) GetAmountOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *InstallmentPlanRefundRequest) SetAmount(v float32) {
	o.Amount = v
}

// GetRefundStrategy returns the RefundStrategy field value if set, zero value otherwise.
func (o *InstallmentPlanRefundRequest) GetRefundStrategy() RefundStrategy {
	if o == nil || isNil(o.RefundStrategy) {
		var ret RefundStrategy
		return ret
	}
	return *o.RefundStrategy
}

// GetRefundStrategyOk returns a tuple with the RefundStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlanRefundRequest) GetRefundStrategyOk() (*RefundStrategy, bool) {
	if o == nil || isNil(o.RefundStrategy) {
    return nil, false
	}
	return o.RefundStrategy, true
}

// HasRefundStrategy returns a boolean if a field has been set.
func (o *InstallmentPlanRefundRequest) HasRefundStrategy() bool {
	if o != nil && !isNil(o.RefundStrategy) {
		return true
	}

	return false
}

// SetRefundStrategy gets a reference to the given RefundStrategy and assigns it to the RefundStrategy field.
func (o *InstallmentPlanRefundRequest) SetRefundStrategy(v RefundStrategy) {
	o.RefundStrategy = &v
}

// GetReferenceId returns the ReferenceId field value if set, zero value otherwise.
func (o *InstallmentPlanRefundRequest) GetReferenceId() string {
	if o == nil || isNil(o.ReferenceId) {
		var ret string
		return ret
	}
	return *o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlanRefundRequest) GetReferenceIdOk() (*string, bool) {
	if o == nil || isNil(o.ReferenceId) {
    return nil, false
	}
	return o.ReferenceId, true
}

// HasReferenceId returns a boolean if a field has been set.
func (o *InstallmentPlanRefundRequest) HasReferenceId() bool {
	if o != nil && !isNil(o.ReferenceId) {
		return true
	}

	return false
}

// SetReferenceId gets a reference to the given string and assigns it to the ReferenceId field.
func (o *InstallmentPlanRefundRequest) SetReferenceId(v string) {
	o.ReferenceId = &v
}

func (o InstallmentPlanRefundRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Amount"] = o.Amount
	}
	if !isNil(o.RefundStrategy) {
		toSerialize["RefundStrategy"] = o.RefundStrategy
	}
	if !isNil(o.ReferenceId) {
		toSerialize["ReferenceId"] = o.ReferenceId
	}
	return json.Marshal(toSerialize)
}

type NullableInstallmentPlanRefundRequest struct {
	value *InstallmentPlanRefundRequest
	isSet bool
}

func (v NullableInstallmentPlanRefundRequest) Get() *InstallmentPlanRefundRequest {
	return v.value
}

func (v *NullableInstallmentPlanRefundRequest) Set(val *InstallmentPlanRefundRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInstallmentPlanRefundRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInstallmentPlanRefundRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstallmentPlanRefundRequest(val *InstallmentPlanRefundRequest) *NullableInstallmentPlanRefundRequest {
	return &NullableInstallmentPlanRefundRequest{value: val, isSet: true}
}

func (v NullableInstallmentPlanRefundRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstallmentPlanRefundRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


