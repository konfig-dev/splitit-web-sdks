/*
splitit-web-api-v3

Splitit's Web API

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package splitit

import (
	"encoding/json"
)

// LinksModel struct for LinksModel
type LinksModel struct {
	PrivacyPolicyUrl *string `json:"PrivacyPolicyUrl,omitempty"`
	TermsAndConditionsUrl *string `json:"TermsAndConditionsUrl,omitempty"`
	LearnMoreUrl *string `json:"LearnMoreUrl,omitempty"`
}

// NewLinksModel instantiates a new LinksModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinksModel() *LinksModel {
	this := LinksModel{}
	return &this
}

// NewLinksModelWithDefaults instantiates a new LinksModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinksModelWithDefaults() *LinksModel {
	this := LinksModel{}
	return &this
}

// GetPrivacyPolicyUrl returns the PrivacyPolicyUrl field value if set, zero value otherwise.
func (o *LinksModel) GetPrivacyPolicyUrl() string {
	if o == nil || isNil(o.PrivacyPolicyUrl) {
		var ret string
		return ret
	}
	return *o.PrivacyPolicyUrl
}

// GetPrivacyPolicyUrlOk returns a tuple with the PrivacyPolicyUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinksModel) GetPrivacyPolicyUrlOk() (*string, bool) {
	if o == nil || isNil(o.PrivacyPolicyUrl) {
    return nil, false
	}
	return o.PrivacyPolicyUrl, true
}

// HasPrivacyPolicyUrl returns a boolean if a field has been set.
func (o *LinksModel) HasPrivacyPolicyUrl() bool {
	if o != nil && !isNil(o.PrivacyPolicyUrl) {
		return true
	}

	return false
}

// SetPrivacyPolicyUrl gets a reference to the given string and assigns it to the PrivacyPolicyUrl field.
func (o *LinksModel) SetPrivacyPolicyUrl(v string) {
	o.PrivacyPolicyUrl = &v
}

// GetTermsAndConditionsUrl returns the TermsAndConditionsUrl field value if set, zero value otherwise.
func (o *LinksModel) GetTermsAndConditionsUrl() string {
	if o == nil || isNil(o.TermsAndConditionsUrl) {
		var ret string
		return ret
	}
	return *o.TermsAndConditionsUrl
}

// GetTermsAndConditionsUrlOk returns a tuple with the TermsAndConditionsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinksModel) GetTermsAndConditionsUrlOk() (*string, bool) {
	if o == nil || isNil(o.TermsAndConditionsUrl) {
    return nil, false
	}
	return o.TermsAndConditionsUrl, true
}

// HasTermsAndConditionsUrl returns a boolean if a field has been set.
func (o *LinksModel) HasTermsAndConditionsUrl() bool {
	if o != nil && !isNil(o.TermsAndConditionsUrl) {
		return true
	}

	return false
}

// SetTermsAndConditionsUrl gets a reference to the given string and assigns it to the TermsAndConditionsUrl field.
func (o *LinksModel) SetTermsAndConditionsUrl(v string) {
	o.TermsAndConditionsUrl = &v
}

// GetLearnMoreUrl returns the LearnMoreUrl field value if set, zero value otherwise.
func (o *LinksModel) GetLearnMoreUrl() string {
	if o == nil || isNil(o.LearnMoreUrl) {
		var ret string
		return ret
	}
	return *o.LearnMoreUrl
}

// GetLearnMoreUrlOk returns a tuple with the LearnMoreUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinksModel) GetLearnMoreUrlOk() (*string, bool) {
	if o == nil || isNil(o.LearnMoreUrl) {
    return nil, false
	}
	return o.LearnMoreUrl, true
}

// HasLearnMoreUrl returns a boolean if a field has been set.
func (o *LinksModel) HasLearnMoreUrl() bool {
	if o != nil && !isNil(o.LearnMoreUrl) {
		return true
	}

	return false
}

// SetLearnMoreUrl gets a reference to the given string and assigns it to the LearnMoreUrl field.
func (o *LinksModel) SetLearnMoreUrl(v string) {
	o.LearnMoreUrl = &v
}

func (o LinksModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PrivacyPolicyUrl) {
		toSerialize["PrivacyPolicyUrl"] = o.PrivacyPolicyUrl
	}
	if !isNil(o.TermsAndConditionsUrl) {
		toSerialize["TermsAndConditionsUrl"] = o.TermsAndConditionsUrl
	}
	if !isNil(o.LearnMoreUrl) {
		toSerialize["LearnMoreUrl"] = o.LearnMoreUrl
	}
	return json.Marshal(toSerialize)
}

type NullableLinksModel struct {
	value *LinksModel
	isSet bool
}

func (v NullableLinksModel) Get() *LinksModel {
	return v.value
}

func (v *NullableLinksModel) Set(val *LinksModel) {
	v.value = val
	v.isSet = true
}

func (v NullableLinksModel) IsSet() bool {
	return v.isSet
}

func (v *NullableLinksModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinksModel(val *LinksModel) *NullableLinksModel {
	return &NullableLinksModel{value: val, isSet: true}
}

func (v NullableLinksModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinksModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


