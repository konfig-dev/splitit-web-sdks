/*
splitit-web-api-v3

Splitit's Web API

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package splitit

import (
	"encoding/json"
)

// InstallmentPlanUpdateRequestByIdentifier struct for InstallmentPlanUpdateRequestByIdentifier
type InstallmentPlanUpdateRequestByIdentifier struct {
	RefOrderNumber *string `json:"RefOrderNumber,omitempty"`
	TrackingNumber *string `json:"TrackingNumber,omitempty"`
	Capture *bool `json:"Capture,omitempty"`
	ShippingStatus *ShippingStatus2 `json:"ShippingStatus,omitempty"`
	Identifier *IdentifierContract `json:"Identifier,omitempty"`
}

// NewInstallmentPlanUpdateRequestByIdentifier instantiates a new InstallmentPlanUpdateRequestByIdentifier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstallmentPlanUpdateRequestByIdentifier() *InstallmentPlanUpdateRequestByIdentifier {
	this := InstallmentPlanUpdateRequestByIdentifier{}
	return &this
}

// NewInstallmentPlanUpdateRequestByIdentifierWithDefaults instantiates a new InstallmentPlanUpdateRequestByIdentifier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstallmentPlanUpdateRequestByIdentifierWithDefaults() *InstallmentPlanUpdateRequestByIdentifier {
	this := InstallmentPlanUpdateRequestByIdentifier{}
	return &this
}

// GetRefOrderNumber returns the RefOrderNumber field value if set, zero value otherwise.
func (o *InstallmentPlanUpdateRequestByIdentifier) GetRefOrderNumber() string {
	if o == nil || isNil(o.RefOrderNumber) {
		var ret string
		return ret
	}
	return *o.RefOrderNumber
}

// GetRefOrderNumberOk returns a tuple with the RefOrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlanUpdateRequestByIdentifier) GetRefOrderNumberOk() (*string, bool) {
	if o == nil || isNil(o.RefOrderNumber) {
    return nil, false
	}
	return o.RefOrderNumber, true
}

// HasRefOrderNumber returns a boolean if a field has been set.
func (o *InstallmentPlanUpdateRequestByIdentifier) HasRefOrderNumber() bool {
	if o != nil && !isNil(o.RefOrderNumber) {
		return true
	}

	return false
}

// SetRefOrderNumber gets a reference to the given string and assigns it to the RefOrderNumber field.
func (o *InstallmentPlanUpdateRequestByIdentifier) SetRefOrderNumber(v string) {
	o.RefOrderNumber = &v
}

// GetTrackingNumber returns the TrackingNumber field value if set, zero value otherwise.
func (o *InstallmentPlanUpdateRequestByIdentifier) GetTrackingNumber() string {
	if o == nil || isNil(o.TrackingNumber) {
		var ret string
		return ret
	}
	return *o.TrackingNumber
}

// GetTrackingNumberOk returns a tuple with the TrackingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlanUpdateRequestByIdentifier) GetTrackingNumberOk() (*string, bool) {
	if o == nil || isNil(o.TrackingNumber) {
    return nil, false
	}
	return o.TrackingNumber, true
}

// HasTrackingNumber returns a boolean if a field has been set.
func (o *InstallmentPlanUpdateRequestByIdentifier) HasTrackingNumber() bool {
	if o != nil && !isNil(o.TrackingNumber) {
		return true
	}

	return false
}

// SetTrackingNumber gets a reference to the given string and assigns it to the TrackingNumber field.
func (o *InstallmentPlanUpdateRequestByIdentifier) SetTrackingNumber(v string) {
	o.TrackingNumber = &v
}

// GetCapture returns the Capture field value if set, zero value otherwise.
func (o *InstallmentPlanUpdateRequestByIdentifier) GetCapture() bool {
	if o == nil || isNil(o.Capture) {
		var ret bool
		return ret
	}
	return *o.Capture
}

// GetCaptureOk returns a tuple with the Capture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlanUpdateRequestByIdentifier) GetCaptureOk() (*bool, bool) {
	if o == nil || isNil(o.Capture) {
    return nil, false
	}
	return o.Capture, true
}

// HasCapture returns a boolean if a field has been set.
func (o *InstallmentPlanUpdateRequestByIdentifier) HasCapture() bool {
	if o != nil && !isNil(o.Capture) {
		return true
	}

	return false
}

// SetCapture gets a reference to the given bool and assigns it to the Capture field.
func (o *InstallmentPlanUpdateRequestByIdentifier) SetCapture(v bool) {
	o.Capture = &v
}

// GetShippingStatus returns the ShippingStatus field value if set, zero value otherwise.
func (o *InstallmentPlanUpdateRequestByIdentifier) GetShippingStatus() ShippingStatus2 {
	if o == nil || isNil(o.ShippingStatus) {
		var ret ShippingStatus2
		return ret
	}
	return *o.ShippingStatus
}

// GetShippingStatusOk returns a tuple with the ShippingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlanUpdateRequestByIdentifier) GetShippingStatusOk() (*ShippingStatus2, bool) {
	if o == nil || isNil(o.ShippingStatus) {
    return nil, false
	}
	return o.ShippingStatus, true
}

// HasShippingStatus returns a boolean if a field has been set.
func (o *InstallmentPlanUpdateRequestByIdentifier) HasShippingStatus() bool {
	if o != nil && !isNil(o.ShippingStatus) {
		return true
	}

	return false
}

// SetShippingStatus gets a reference to the given ShippingStatus2 and assigns it to the ShippingStatus field.
func (o *InstallmentPlanUpdateRequestByIdentifier) SetShippingStatus(v ShippingStatus2) {
	o.ShippingStatus = &v
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *InstallmentPlanUpdateRequestByIdentifier) GetIdentifier() IdentifierContract {
	if o == nil || isNil(o.Identifier) {
		var ret IdentifierContract
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlanUpdateRequestByIdentifier) GetIdentifierOk() (*IdentifierContract, bool) {
	if o == nil || isNil(o.Identifier) {
    return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *InstallmentPlanUpdateRequestByIdentifier) HasIdentifier() bool {
	if o != nil && !isNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given IdentifierContract and assigns it to the Identifier field.
func (o *InstallmentPlanUpdateRequestByIdentifier) SetIdentifier(v IdentifierContract) {
	o.Identifier = &v
}

func (o InstallmentPlanUpdateRequestByIdentifier) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.RefOrderNumber) {
		toSerialize["RefOrderNumber"] = o.RefOrderNumber
	}
	if !isNil(o.TrackingNumber) {
		toSerialize["TrackingNumber"] = o.TrackingNumber
	}
	if !isNil(o.Capture) {
		toSerialize["Capture"] = o.Capture
	}
	if !isNil(o.ShippingStatus) {
		toSerialize["ShippingStatus"] = o.ShippingStatus
	}
	if !isNil(o.Identifier) {
		toSerialize["Identifier"] = o.Identifier
	}
	return json.Marshal(toSerialize)
}

type NullableInstallmentPlanUpdateRequestByIdentifier struct {
	value *InstallmentPlanUpdateRequestByIdentifier
	isSet bool
}

func (v NullableInstallmentPlanUpdateRequestByIdentifier) Get() *InstallmentPlanUpdateRequestByIdentifier {
	return v.value
}

func (v *NullableInstallmentPlanUpdateRequestByIdentifier) Set(val *InstallmentPlanUpdateRequestByIdentifier) {
	v.value = val
	v.isSet = true
}

func (v NullableInstallmentPlanUpdateRequestByIdentifier) IsSet() bool {
	return v.isSet
}

func (v *NullableInstallmentPlanUpdateRequestByIdentifier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstallmentPlanUpdateRequestByIdentifier(val *InstallmentPlanUpdateRequestByIdentifier) *NullableInstallmentPlanUpdateRequestByIdentifier {
	return &NullableInstallmentPlanUpdateRequestByIdentifier{value: val, isSet: true}
}

func (v NullableInstallmentPlanUpdateRequestByIdentifier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstallmentPlanUpdateRequestByIdentifier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


