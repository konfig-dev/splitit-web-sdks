/*
splitit-web-api-v3

Splitit's Web API

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package splitit

import (
	"encoding/json"
)

// InstallmentPlanInitiateRequest struct for InstallmentPlanInitiateRequest
type InstallmentPlanInitiateRequest struct {
	AutoCapture bool `json:"AutoCapture"`
	Attempt3dSecure *bool `json:"Attempt3dSecure,omitempty"`
	Shopper *ShopperData `json:"Shopper,omitempty"`
	PlanData *PlanDataModel `json:"PlanData,omitempty"`
	BillingAddress *AddressDataModel `json:"BillingAddress,omitempty"`
	RedirectUrls *InitiateRedirectionEndpointsModel `json:"RedirectUrls,omitempty"`
	UxSettings *UxSettingsModel `json:"UxSettings,omitempty"`
	EventsEndpoints *EventsEndpointsModel `json:"EventsEndpoints,omitempty"`
	ProcessingData *ProcessingData `json:"ProcessingData,omitempty"`
}

// NewInstallmentPlanInitiateRequest instantiates a new InstallmentPlanInitiateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstallmentPlanInitiateRequest(autoCapture bool) *InstallmentPlanInitiateRequest {
	this := InstallmentPlanInitiateRequest{}
	this.AutoCapture = autoCapture
	return &this
}

// NewInstallmentPlanInitiateRequestWithDefaults instantiates a new InstallmentPlanInitiateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstallmentPlanInitiateRequestWithDefaults() *InstallmentPlanInitiateRequest {
	this := InstallmentPlanInitiateRequest{}
	return &this
}

// GetAutoCapture returns the AutoCapture field value
func (o *InstallmentPlanInitiateRequest) GetAutoCapture() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoCapture
}

// GetAutoCaptureOk returns a tuple with the AutoCapture field value
// and a boolean to check if the value has been set.
func (o *InstallmentPlanInitiateRequest) GetAutoCaptureOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AutoCapture, true
}

// SetAutoCapture sets field value
func (o *InstallmentPlanInitiateRequest) SetAutoCapture(v bool) {
	o.AutoCapture = v
}

// GetAttempt3dSecure returns the Attempt3dSecure field value if set, zero value otherwise.
func (o *InstallmentPlanInitiateRequest) GetAttempt3dSecure() bool {
	if o == nil || isNil(o.Attempt3dSecure) {
		var ret bool
		return ret
	}
	return *o.Attempt3dSecure
}

// GetAttempt3dSecureOk returns a tuple with the Attempt3dSecure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlanInitiateRequest) GetAttempt3dSecureOk() (*bool, bool) {
	if o == nil || isNil(o.Attempt3dSecure) {
    return nil, false
	}
	return o.Attempt3dSecure, true
}

// HasAttempt3dSecure returns a boolean if a field has been set.
func (o *InstallmentPlanInitiateRequest) HasAttempt3dSecure() bool {
	if o != nil && !isNil(o.Attempt3dSecure) {
		return true
	}

	return false
}

// SetAttempt3dSecure gets a reference to the given bool and assigns it to the Attempt3dSecure field.
func (o *InstallmentPlanInitiateRequest) SetAttempt3dSecure(v bool) {
	o.Attempt3dSecure = &v
}

// GetShopper returns the Shopper field value if set, zero value otherwise.
func (o *InstallmentPlanInitiateRequest) GetShopper() ShopperData {
	if o == nil || isNil(o.Shopper) {
		var ret ShopperData
		return ret
	}
	return *o.Shopper
}

// GetShopperOk returns a tuple with the Shopper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlanInitiateRequest) GetShopperOk() (*ShopperData, bool) {
	if o == nil || isNil(o.Shopper) {
    return nil, false
	}
	return o.Shopper, true
}

// HasShopper returns a boolean if a field has been set.
func (o *InstallmentPlanInitiateRequest) HasShopper() bool {
	if o != nil && !isNil(o.Shopper) {
		return true
	}

	return false
}

// SetShopper gets a reference to the given ShopperData and assigns it to the Shopper field.
func (o *InstallmentPlanInitiateRequest) SetShopper(v ShopperData) {
	o.Shopper = &v
}

// GetPlanData returns the PlanData field value if set, zero value otherwise.
func (o *InstallmentPlanInitiateRequest) GetPlanData() PlanDataModel {
	if o == nil || isNil(o.PlanData) {
		var ret PlanDataModel
		return ret
	}
	return *o.PlanData
}

// GetPlanDataOk returns a tuple with the PlanData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlanInitiateRequest) GetPlanDataOk() (*PlanDataModel, bool) {
	if o == nil || isNil(o.PlanData) {
    return nil, false
	}
	return o.PlanData, true
}

// HasPlanData returns a boolean if a field has been set.
func (o *InstallmentPlanInitiateRequest) HasPlanData() bool {
	if o != nil && !isNil(o.PlanData) {
		return true
	}

	return false
}

// SetPlanData gets a reference to the given PlanDataModel and assigns it to the PlanData field.
func (o *InstallmentPlanInitiateRequest) SetPlanData(v PlanDataModel) {
	o.PlanData = &v
}

// GetBillingAddress returns the BillingAddress field value if set, zero value otherwise.
func (o *InstallmentPlanInitiateRequest) GetBillingAddress() AddressDataModel {
	if o == nil || isNil(o.BillingAddress) {
		var ret AddressDataModel
		return ret
	}
	return *o.BillingAddress
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlanInitiateRequest) GetBillingAddressOk() (*AddressDataModel, bool) {
	if o == nil || isNil(o.BillingAddress) {
    return nil, false
	}
	return o.BillingAddress, true
}

// HasBillingAddress returns a boolean if a field has been set.
func (o *InstallmentPlanInitiateRequest) HasBillingAddress() bool {
	if o != nil && !isNil(o.BillingAddress) {
		return true
	}

	return false
}

// SetBillingAddress gets a reference to the given AddressDataModel and assigns it to the BillingAddress field.
func (o *InstallmentPlanInitiateRequest) SetBillingAddress(v AddressDataModel) {
	o.BillingAddress = &v
}

// GetRedirectUrls returns the RedirectUrls field value if set, zero value otherwise.
func (o *InstallmentPlanInitiateRequest) GetRedirectUrls() InitiateRedirectionEndpointsModel {
	if o == nil || isNil(o.RedirectUrls) {
		var ret InitiateRedirectionEndpointsModel
		return ret
	}
	return *o.RedirectUrls
}

// GetRedirectUrlsOk returns a tuple with the RedirectUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlanInitiateRequest) GetRedirectUrlsOk() (*InitiateRedirectionEndpointsModel, bool) {
	if o == nil || isNil(o.RedirectUrls) {
    return nil, false
	}
	return o.RedirectUrls, true
}

// HasRedirectUrls returns a boolean if a field has been set.
func (o *InstallmentPlanInitiateRequest) HasRedirectUrls() bool {
	if o != nil && !isNil(o.RedirectUrls) {
		return true
	}

	return false
}

// SetRedirectUrls gets a reference to the given InitiateRedirectionEndpointsModel and assigns it to the RedirectUrls field.
func (o *InstallmentPlanInitiateRequest) SetRedirectUrls(v InitiateRedirectionEndpointsModel) {
	o.RedirectUrls = &v
}

// GetUxSettings returns the UxSettings field value if set, zero value otherwise.
func (o *InstallmentPlanInitiateRequest) GetUxSettings() UxSettingsModel {
	if o == nil || isNil(o.UxSettings) {
		var ret UxSettingsModel
		return ret
	}
	return *o.UxSettings
}

// GetUxSettingsOk returns a tuple with the UxSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlanInitiateRequest) GetUxSettingsOk() (*UxSettingsModel, bool) {
	if o == nil || isNil(o.UxSettings) {
    return nil, false
	}
	return o.UxSettings, true
}

// HasUxSettings returns a boolean if a field has been set.
func (o *InstallmentPlanInitiateRequest) HasUxSettings() bool {
	if o != nil && !isNil(o.UxSettings) {
		return true
	}

	return false
}

// SetUxSettings gets a reference to the given UxSettingsModel and assigns it to the UxSettings field.
func (o *InstallmentPlanInitiateRequest) SetUxSettings(v UxSettingsModel) {
	o.UxSettings = &v
}

// GetEventsEndpoints returns the EventsEndpoints field value if set, zero value otherwise.
func (o *InstallmentPlanInitiateRequest) GetEventsEndpoints() EventsEndpointsModel {
	if o == nil || isNil(o.EventsEndpoints) {
		var ret EventsEndpointsModel
		return ret
	}
	return *o.EventsEndpoints
}

// GetEventsEndpointsOk returns a tuple with the EventsEndpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlanInitiateRequest) GetEventsEndpointsOk() (*EventsEndpointsModel, bool) {
	if o == nil || isNil(o.EventsEndpoints) {
    return nil, false
	}
	return o.EventsEndpoints, true
}

// HasEventsEndpoints returns a boolean if a field has been set.
func (o *InstallmentPlanInitiateRequest) HasEventsEndpoints() bool {
	if o != nil && !isNil(o.EventsEndpoints) {
		return true
	}

	return false
}

// SetEventsEndpoints gets a reference to the given EventsEndpointsModel and assigns it to the EventsEndpoints field.
func (o *InstallmentPlanInitiateRequest) SetEventsEndpoints(v EventsEndpointsModel) {
	o.EventsEndpoints = &v
}

// GetProcessingData returns the ProcessingData field value if set, zero value otherwise.
func (o *InstallmentPlanInitiateRequest) GetProcessingData() ProcessingData {
	if o == nil || isNil(o.ProcessingData) {
		var ret ProcessingData
		return ret
	}
	return *o.ProcessingData
}

// GetProcessingDataOk returns a tuple with the ProcessingData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlanInitiateRequest) GetProcessingDataOk() (*ProcessingData, bool) {
	if o == nil || isNil(o.ProcessingData) {
    return nil, false
	}
	return o.ProcessingData, true
}

// HasProcessingData returns a boolean if a field has been set.
func (o *InstallmentPlanInitiateRequest) HasProcessingData() bool {
	if o != nil && !isNil(o.ProcessingData) {
		return true
	}

	return false
}

// SetProcessingData gets a reference to the given ProcessingData and assigns it to the ProcessingData field.
func (o *InstallmentPlanInitiateRequest) SetProcessingData(v ProcessingData) {
	o.ProcessingData = &v
}

func (o InstallmentPlanInitiateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["AutoCapture"] = o.AutoCapture
	}
	if !isNil(o.Attempt3dSecure) {
		toSerialize["Attempt3dSecure"] = o.Attempt3dSecure
	}
	if !isNil(o.Shopper) {
		toSerialize["Shopper"] = o.Shopper
	}
	if !isNil(o.PlanData) {
		toSerialize["PlanData"] = o.PlanData
	}
	if !isNil(o.BillingAddress) {
		toSerialize["BillingAddress"] = o.BillingAddress
	}
	if !isNil(o.RedirectUrls) {
		toSerialize["RedirectUrls"] = o.RedirectUrls
	}
	if !isNil(o.UxSettings) {
		toSerialize["UxSettings"] = o.UxSettings
	}
	if !isNil(o.EventsEndpoints) {
		toSerialize["EventsEndpoints"] = o.EventsEndpoints
	}
	if !isNil(o.ProcessingData) {
		toSerialize["ProcessingData"] = o.ProcessingData
	}
	return json.Marshal(toSerialize)
}

type NullableInstallmentPlanInitiateRequest struct {
	value *InstallmentPlanInitiateRequest
	isSet bool
}

func (v NullableInstallmentPlanInitiateRequest) Get() *InstallmentPlanInitiateRequest {
	return v.value
}

func (v *NullableInstallmentPlanInitiateRequest) Set(val *InstallmentPlanInitiateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInstallmentPlanInitiateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInstallmentPlanInitiateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstallmentPlanInitiateRequest(val *InstallmentPlanInitiateRequest) *NullableInstallmentPlanInitiateRequest {
	return &NullableInstallmentPlanInitiateRequest{value: val, isSet: true}
}

func (v NullableInstallmentPlanInitiateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstallmentPlanInitiateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


