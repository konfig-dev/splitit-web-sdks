/*
splitit-web-api-v3

Splitit's API

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package splitit

import (
	"encoding/json"
	"time"
)

// AuthorizationModel struct for AuthorizationModel
type AuthorizationModel struct {
	Status GwAuthorizationStatus `json:"Status"`
	Date *time.Time `json:"Date,omitempty"`
	SplititErrorResultCode NullableString `json:"SplititErrorResultCode,omitempty"`
	GatewayTransactionID *string `json:"GatewayTransactionID,omitempty"`
	GatewayResultCode *string `json:"GatewayResultCode,omitempty"`
	GatewayResultMessage *string `json:"GatewayResultMessage,omitempty"`
	ThreeDSRedirect *ThreeDsRedirectData `json:"ThreeDSRedirect,omitempty"`
	CAVV NullableString `json:"CAVV,omitempty"`
	ECI NullableString `json:"ECI,omitempty"`
}

// NewAuthorizationModel instantiates a new AuthorizationModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizationModel(status GwAuthorizationStatus) *AuthorizationModel {
	this := AuthorizationModel{}
	this.Status = status
	return &this
}

// NewAuthorizationModelWithDefaults instantiates a new AuthorizationModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationModelWithDefaults() *AuthorizationModel {
	this := AuthorizationModel{}
	return &this
}

// GetStatus returns the Status field value
func (o *AuthorizationModel) GetStatus() GwAuthorizationStatus {
	if o == nil {
		var ret GwAuthorizationStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AuthorizationModel) GetStatusOk() (*GwAuthorizationStatus, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AuthorizationModel) SetStatus(v GwAuthorizationStatus) {
	o.Status = v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *AuthorizationModel) GetDate() time.Time {
	if o == nil || isNil(o.Date) {
		var ret time.Time
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationModel) GetDateOk() (*time.Time, bool) {
	if o == nil || isNil(o.Date) {
    return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *AuthorizationModel) HasDate() bool {
	if o != nil && !isNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given time.Time and assigns it to the Date field.
func (o *AuthorizationModel) SetDate(v time.Time) {
	o.Date = &v
}

// GetSplititErrorResultCode returns the SplititErrorResultCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorizationModel) GetSplititErrorResultCode() string {
	if o == nil || isNil(o.SplititErrorResultCode.Get()) {
		var ret string
		return ret
	}
	return *o.SplititErrorResultCode.Get()
}

// GetSplititErrorResultCodeOk returns a tuple with the SplititErrorResultCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorizationModel) GetSplititErrorResultCodeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.SplititErrorResultCode.Get(), o.SplititErrorResultCode.IsSet()
}

// HasSplititErrorResultCode returns a boolean if a field has been set.
func (o *AuthorizationModel) HasSplititErrorResultCode() bool {
	if o != nil && o.SplititErrorResultCode.IsSet() {
		return true
	}

	return false
}

// SetSplititErrorResultCode gets a reference to the given NullableString and assigns it to the SplititErrorResultCode field.
func (o *AuthorizationModel) SetSplititErrorResultCode(v string) {
	o.SplititErrorResultCode.Set(&v)
}
// SetSplititErrorResultCodeNil sets the value for SplititErrorResultCode to be an explicit nil
func (o *AuthorizationModel) SetSplititErrorResultCodeNil() {
	o.SplititErrorResultCode.Set(nil)
}

// UnsetSplititErrorResultCode ensures that no value is present for SplititErrorResultCode, not even an explicit nil
func (o *AuthorizationModel) UnsetSplititErrorResultCode() {
	o.SplititErrorResultCode.Unset()
}

// GetGatewayTransactionID returns the GatewayTransactionID field value if set, zero value otherwise.
func (o *AuthorizationModel) GetGatewayTransactionID() string {
	if o == nil || isNil(o.GatewayTransactionID) {
		var ret string
		return ret
	}
	return *o.GatewayTransactionID
}

// GetGatewayTransactionIDOk returns a tuple with the GatewayTransactionID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationModel) GetGatewayTransactionIDOk() (*string, bool) {
	if o == nil || isNil(o.GatewayTransactionID) {
    return nil, false
	}
	return o.GatewayTransactionID, true
}

// HasGatewayTransactionID returns a boolean if a field has been set.
func (o *AuthorizationModel) HasGatewayTransactionID() bool {
	if o != nil && !isNil(o.GatewayTransactionID) {
		return true
	}

	return false
}

// SetGatewayTransactionID gets a reference to the given string and assigns it to the GatewayTransactionID field.
func (o *AuthorizationModel) SetGatewayTransactionID(v string) {
	o.GatewayTransactionID = &v
}

// GetGatewayResultCode returns the GatewayResultCode field value if set, zero value otherwise.
func (o *AuthorizationModel) GetGatewayResultCode() string {
	if o == nil || isNil(o.GatewayResultCode) {
		var ret string
		return ret
	}
	return *o.GatewayResultCode
}

// GetGatewayResultCodeOk returns a tuple with the GatewayResultCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationModel) GetGatewayResultCodeOk() (*string, bool) {
	if o == nil || isNil(o.GatewayResultCode) {
    return nil, false
	}
	return o.GatewayResultCode, true
}

// HasGatewayResultCode returns a boolean if a field has been set.
func (o *AuthorizationModel) HasGatewayResultCode() bool {
	if o != nil && !isNil(o.GatewayResultCode) {
		return true
	}

	return false
}

// SetGatewayResultCode gets a reference to the given string and assigns it to the GatewayResultCode field.
func (o *AuthorizationModel) SetGatewayResultCode(v string) {
	o.GatewayResultCode = &v
}

// GetGatewayResultMessage returns the GatewayResultMessage field value if set, zero value otherwise.
func (o *AuthorizationModel) GetGatewayResultMessage() string {
	if o == nil || isNil(o.GatewayResultMessage) {
		var ret string
		return ret
	}
	return *o.GatewayResultMessage
}

// GetGatewayResultMessageOk returns a tuple with the GatewayResultMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationModel) GetGatewayResultMessageOk() (*string, bool) {
	if o == nil || isNil(o.GatewayResultMessage) {
    return nil, false
	}
	return o.GatewayResultMessage, true
}

// HasGatewayResultMessage returns a boolean if a field has been set.
func (o *AuthorizationModel) HasGatewayResultMessage() bool {
	if o != nil && !isNil(o.GatewayResultMessage) {
		return true
	}

	return false
}

// SetGatewayResultMessage gets a reference to the given string and assigns it to the GatewayResultMessage field.
func (o *AuthorizationModel) SetGatewayResultMessage(v string) {
	o.GatewayResultMessage = &v
}

// GetThreeDSRedirect returns the ThreeDSRedirect field value if set, zero value otherwise.
func (o *AuthorizationModel) GetThreeDSRedirect() ThreeDsRedirectData {
	if o == nil || isNil(o.ThreeDSRedirect) {
		var ret ThreeDsRedirectData
		return ret
	}
	return *o.ThreeDSRedirect
}

// GetThreeDSRedirectOk returns a tuple with the ThreeDSRedirect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationModel) GetThreeDSRedirectOk() (*ThreeDsRedirectData, bool) {
	if o == nil || isNil(o.ThreeDSRedirect) {
    return nil, false
	}
	return o.ThreeDSRedirect, true
}

// HasThreeDSRedirect returns a boolean if a field has been set.
func (o *AuthorizationModel) HasThreeDSRedirect() bool {
	if o != nil && !isNil(o.ThreeDSRedirect) {
		return true
	}

	return false
}

// SetThreeDSRedirect gets a reference to the given ThreeDsRedirectData and assigns it to the ThreeDSRedirect field.
func (o *AuthorizationModel) SetThreeDSRedirect(v ThreeDsRedirectData) {
	o.ThreeDSRedirect = &v
}

// GetCAVV returns the CAVV field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorizationModel) GetCAVV() string {
	if o == nil || isNil(o.CAVV.Get()) {
		var ret string
		return ret
	}
	return *o.CAVV.Get()
}

// GetCAVVOk returns a tuple with the CAVV field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorizationModel) GetCAVVOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.CAVV.Get(), o.CAVV.IsSet()
}

// HasCAVV returns a boolean if a field has been set.
func (o *AuthorizationModel) HasCAVV() bool {
	if o != nil && o.CAVV.IsSet() {
		return true
	}

	return false
}

// SetCAVV gets a reference to the given NullableString and assigns it to the CAVV field.
func (o *AuthorizationModel) SetCAVV(v string) {
	o.CAVV.Set(&v)
}
// SetCAVVNil sets the value for CAVV to be an explicit nil
func (o *AuthorizationModel) SetCAVVNil() {
	o.CAVV.Set(nil)
}

// UnsetCAVV ensures that no value is present for CAVV, not even an explicit nil
func (o *AuthorizationModel) UnsetCAVV() {
	o.CAVV.Unset()
}

// GetECI returns the ECI field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorizationModel) GetECI() string {
	if o == nil || isNil(o.ECI.Get()) {
		var ret string
		return ret
	}
	return *o.ECI.Get()
}

// GetECIOk returns a tuple with the ECI field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorizationModel) GetECIOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ECI.Get(), o.ECI.IsSet()
}

// HasECI returns a boolean if a field has been set.
func (o *AuthorizationModel) HasECI() bool {
	if o != nil && o.ECI.IsSet() {
		return true
	}

	return false
}

// SetECI gets a reference to the given NullableString and assigns it to the ECI field.
func (o *AuthorizationModel) SetECI(v string) {
	o.ECI.Set(&v)
}
// SetECINil sets the value for ECI to be an explicit nil
func (o *AuthorizationModel) SetECINil() {
	o.ECI.Set(nil)
}

// UnsetECI ensures that no value is present for ECI, not even an explicit nil
func (o *AuthorizationModel) UnsetECI() {
	o.ECI.Unset()
}

func (o AuthorizationModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Status"] = o.Status
	}
	if !isNil(o.Date) {
		toSerialize["Date"] = o.Date
	}
	if o.SplititErrorResultCode.IsSet() {
		toSerialize["SplititErrorResultCode"] = o.SplititErrorResultCode.Get()
	}
	if !isNil(o.GatewayTransactionID) {
		toSerialize["GatewayTransactionID"] = o.GatewayTransactionID
	}
	if !isNil(o.GatewayResultCode) {
		toSerialize["GatewayResultCode"] = o.GatewayResultCode
	}
	if !isNil(o.GatewayResultMessage) {
		toSerialize["GatewayResultMessage"] = o.GatewayResultMessage
	}
	if !isNil(o.ThreeDSRedirect) {
		toSerialize["ThreeDSRedirect"] = o.ThreeDSRedirect
	}
	if o.CAVV.IsSet() {
		toSerialize["CAVV"] = o.CAVV.Get()
	}
	if o.ECI.IsSet() {
		toSerialize["ECI"] = o.ECI.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAuthorizationModel struct {
	value *AuthorizationModel
	isSet bool
}

func (v NullableAuthorizationModel) Get() *AuthorizationModel {
	return v.value
}

func (v *NullableAuthorizationModel) Set(val *AuthorizationModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizationModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizationModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizationModel(val *AuthorizationModel) *NullableAuthorizationModel {
	return &NullableAuthorizationModel{value: val, isSet: true}
}

func (v NullableAuthorizationModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizationModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


