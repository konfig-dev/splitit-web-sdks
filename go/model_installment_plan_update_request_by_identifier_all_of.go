/*
splitit-web-api-v3

Splitit's Web API

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package splitit

import (
	"encoding/json"
)

// InstallmentPlanUpdateRequestByIdentifierAllOf struct for InstallmentPlanUpdateRequestByIdentifierAllOf
type InstallmentPlanUpdateRequestByIdentifierAllOf struct {
	Identifier *IdentifierContract `json:"Identifier,omitempty"`
}

// NewInstallmentPlanUpdateRequestByIdentifierAllOf instantiates a new InstallmentPlanUpdateRequestByIdentifierAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstallmentPlanUpdateRequestByIdentifierAllOf() *InstallmentPlanUpdateRequestByIdentifierAllOf {
	this := InstallmentPlanUpdateRequestByIdentifierAllOf{}
	return &this
}

// NewInstallmentPlanUpdateRequestByIdentifierAllOfWithDefaults instantiates a new InstallmentPlanUpdateRequestByIdentifierAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstallmentPlanUpdateRequestByIdentifierAllOfWithDefaults() *InstallmentPlanUpdateRequestByIdentifierAllOf {
	this := InstallmentPlanUpdateRequestByIdentifierAllOf{}
	return &this
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *InstallmentPlanUpdateRequestByIdentifierAllOf) GetIdentifier() IdentifierContract {
	if o == nil || isNil(o.Identifier) {
		var ret IdentifierContract
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlanUpdateRequestByIdentifierAllOf) GetIdentifierOk() (*IdentifierContract, bool) {
	if o == nil || isNil(o.Identifier) {
    return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *InstallmentPlanUpdateRequestByIdentifierAllOf) HasIdentifier() bool {
	if o != nil && !isNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given IdentifierContract and assigns it to the Identifier field.
func (o *InstallmentPlanUpdateRequestByIdentifierAllOf) SetIdentifier(v IdentifierContract) {
	o.Identifier = &v
}

func (o InstallmentPlanUpdateRequestByIdentifierAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Identifier) {
		toSerialize["Identifier"] = o.Identifier
	}
	return json.Marshal(toSerialize)
}

type NullableInstallmentPlanUpdateRequestByIdentifierAllOf struct {
	value *InstallmentPlanUpdateRequestByIdentifierAllOf
	isSet bool
}

func (v NullableInstallmentPlanUpdateRequestByIdentifierAllOf) Get() *InstallmentPlanUpdateRequestByIdentifierAllOf {
	return v.value
}

func (v *NullableInstallmentPlanUpdateRequestByIdentifierAllOf) Set(val *InstallmentPlanUpdateRequestByIdentifierAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableInstallmentPlanUpdateRequestByIdentifierAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableInstallmentPlanUpdateRequestByIdentifierAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstallmentPlanUpdateRequestByIdentifierAllOf(val *InstallmentPlanUpdateRequestByIdentifierAllOf) *NullableInstallmentPlanUpdateRequestByIdentifierAllOf {
	return &NullableInstallmentPlanUpdateRequestByIdentifierAllOf{value: val, isSet: true}
}

func (v NullableInstallmentPlanUpdateRequestByIdentifierAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstallmentPlanUpdateRequestByIdentifierAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


