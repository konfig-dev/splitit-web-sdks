/*
splitit-web-api-v3

Splitit's Web API

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package splitit

import (
	"encoding/json"
)

// InstallmentPlanResponse struct for InstallmentPlanResponse
type InstallmentPlanResponse struct {
	ResponseHeader *ResponseHeader `json:"ResponseHeader,omitempty"`
	InstallmentPlan *InstallmentPlan `json:"InstallmentPlan,omitempty"`
	GatewayTransactionResults []TransactionResult `json:"GatewayTransactionResults,omitempty"`
}

// NewInstallmentPlanResponse instantiates a new InstallmentPlanResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstallmentPlanResponse() *InstallmentPlanResponse {
	this := InstallmentPlanResponse{}
	return &this
}

// NewInstallmentPlanResponseWithDefaults instantiates a new InstallmentPlanResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstallmentPlanResponseWithDefaults() *InstallmentPlanResponse {
	this := InstallmentPlanResponse{}
	return &this
}

// GetResponseHeader returns the ResponseHeader field value if set, zero value otherwise.
func (o *InstallmentPlanResponse) GetResponseHeader() ResponseHeader {
	if o == nil || isNil(o.ResponseHeader) {
		var ret ResponseHeader
		return ret
	}
	return *o.ResponseHeader
}

// GetResponseHeaderOk returns a tuple with the ResponseHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlanResponse) GetResponseHeaderOk() (*ResponseHeader, bool) {
	if o == nil || isNil(o.ResponseHeader) {
    return nil, false
	}
	return o.ResponseHeader, true
}

// HasResponseHeader returns a boolean if a field has been set.
func (o *InstallmentPlanResponse) HasResponseHeader() bool {
	if o != nil && !isNil(o.ResponseHeader) {
		return true
	}

	return false
}

// SetResponseHeader gets a reference to the given ResponseHeader and assigns it to the ResponseHeader field.
func (o *InstallmentPlanResponse) SetResponseHeader(v ResponseHeader) {
	o.ResponseHeader = &v
}

// GetInstallmentPlan returns the InstallmentPlan field value if set, zero value otherwise.
func (o *InstallmentPlanResponse) GetInstallmentPlan() InstallmentPlan {
	if o == nil || isNil(o.InstallmentPlan) {
		var ret InstallmentPlan
		return ret
	}
	return *o.InstallmentPlan
}

// GetInstallmentPlanOk returns a tuple with the InstallmentPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlanResponse) GetInstallmentPlanOk() (*InstallmentPlan, bool) {
	if o == nil || isNil(o.InstallmentPlan) {
    return nil, false
	}
	return o.InstallmentPlan, true
}

// HasInstallmentPlan returns a boolean if a field has been set.
func (o *InstallmentPlanResponse) HasInstallmentPlan() bool {
	if o != nil && !isNil(o.InstallmentPlan) {
		return true
	}

	return false
}

// SetInstallmentPlan gets a reference to the given InstallmentPlan and assigns it to the InstallmentPlan field.
func (o *InstallmentPlanResponse) SetInstallmentPlan(v InstallmentPlan) {
	o.InstallmentPlan = &v
}

// GetGatewayTransactionResults returns the GatewayTransactionResults field value if set, zero value otherwise.
func (o *InstallmentPlanResponse) GetGatewayTransactionResults() []TransactionResult {
	if o == nil || isNil(o.GatewayTransactionResults) {
		var ret []TransactionResult
		return ret
	}
	return o.GatewayTransactionResults
}

// GetGatewayTransactionResultsOk returns a tuple with the GatewayTransactionResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlanResponse) GetGatewayTransactionResultsOk() ([]TransactionResult, bool) {
	if o == nil || isNil(o.GatewayTransactionResults) {
    return nil, false
	}
	return o.GatewayTransactionResults, true
}

// HasGatewayTransactionResults returns a boolean if a field has been set.
func (o *InstallmentPlanResponse) HasGatewayTransactionResults() bool {
	if o != nil && !isNil(o.GatewayTransactionResults) {
		return true
	}

	return false
}

// SetGatewayTransactionResults gets a reference to the given []TransactionResult and assigns it to the GatewayTransactionResults field.
func (o *InstallmentPlanResponse) SetGatewayTransactionResults(v []TransactionResult) {
	o.GatewayTransactionResults = v
}

func (o InstallmentPlanResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ResponseHeader) {
		toSerialize["ResponseHeader"] = o.ResponseHeader
	}
	if !isNil(o.InstallmentPlan) {
		toSerialize["InstallmentPlan"] = o.InstallmentPlan
	}
	if !isNil(o.GatewayTransactionResults) {
		toSerialize["GatewayTransactionResults"] = o.GatewayTransactionResults
	}
	return json.Marshal(toSerialize)
}

type NullableInstallmentPlanResponse struct {
	value *InstallmentPlanResponse
	isSet bool
}

func (v NullableInstallmentPlanResponse) Get() *InstallmentPlanResponse {
	return v.value
}

func (v *NullableInstallmentPlanResponse) Set(val *InstallmentPlanResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInstallmentPlanResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInstallmentPlanResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstallmentPlanResponse(val *InstallmentPlanResponse) *NullableInstallmentPlanResponse {
	return &NullableInstallmentPlanResponse{value: val, isSet: true}
}

func (v NullableInstallmentPlanResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstallmentPlanResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


