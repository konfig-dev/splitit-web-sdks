/*
splitit-web-api-v3

Splitit's Web API

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package splitit

import (
	"encoding/json"
	"time"
)

// InstallmentPlan struct for InstallmentPlan
type InstallmentPlan struct {
	InstallmentPlanNumber *string `json:"InstallmentPlanNumber,omitempty"`
	InstallmentPlanStatus *ReferenceEntityBase `json:"InstallmentPlanStatus,omitempty"`
	Amount *Money `json:"Amount,omitempty"`
	OutstandingAmount *Money `json:"OutstandingAmount,omitempty"`
	Disputes *Disputes `json:"Disputes,omitempty"`
	NumberOfInstallments int32 `json:"NumberOfInstallments"`
	NumberOfProcessedInstallments int32 `json:"NumberOfProcessedInstallments"`
	OriginalAmount *Money `json:"OriginalAmount,omitempty"`
	RefundAmount *Money `json:"RefundAmount,omitempty"`
	Consumer *ConsumerData `json:"Consumer,omitempty"`
	ActiveCard *CardData2 `json:"ActiveCard,omitempty"`
	FraudCheck *FraudCheck `json:"FraudCheck,omitempty"`
	Terminal *TerminalRef `json:"Terminal,omitempty"`
	Merchant *MerchantRef `json:"Merchant,omitempty"`
	RefOrderNumber *string `json:"RefOrderNumber,omitempty"`
	PurchaseMethod *ReferenceEntityBase `json:"PurchaseMethod,omitempty"`
	Strategy *ReferenceEntityBase `json:"Strategy,omitempty"`
	DelayResolution *ReferenceEntityBase `json:"DelayResolution,omitempty"`
	ExtendedParams *map[string]string `json:"ExtendedParams,omitempty"`
	IsFullCaptured bool `json:"IsFullCaptured"`
	IsChargedBack bool `json:"IsChargedBack"`
	ArePaymentsOnHold bool `json:"ArePaymentsOnHold"`
	ScpFundingPercent float32 `json:"ScpFundingPercent"`
	FundingStatus MoneyFlows `json:"FundingStatus"`
	TestMode TestModes `json:"TestMode"`
	CreationDateTime time.Time `json:"CreationDateTime"`
	LifeTimeUrlExpirationTime time.Time `json:"LifeTimeUrlExpirationTime"`
	Installments []Installment2 `json:"Installments,omitempty"`
	SecureAuthorizations []ReAuthorization `json:"SecureAuthorizations,omitempty"`
	LogoUrl *string `json:"LogoUrl,omitempty"`
	IsInAutoRetry bool `json:"IsInAutoRetry"`
	PaymentMethod *string `json:"PaymentMethod,omitempty"`
	AllowCardUpdateOnSplititPortals bool `json:"AllowCardUpdateOnSplititPortals"`
	OnHoldLastOpenDate *time.Time `json:"OnHoldLastOpenDate,omitempty"`
	OnHoldLastOpenUserId *string `json:"OnHoldLastOpenUserId,omitempty"`
	InstallmentsScheduleInterval int32 `json:"InstallmentsScheduleInterval"`
	ExternalPaymentProvider *ExternalProviderTypes `json:"ExternalPaymentProvider,omitempty"`
}

// NewInstallmentPlan instantiates a new InstallmentPlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstallmentPlan(numberOfInstallments int32, numberOfProcessedInstallments int32, isFullCaptured bool, isChargedBack bool, arePaymentsOnHold bool, scpFundingPercent float32, fundingStatus MoneyFlows, testMode TestModes, creationDateTime time.Time, lifeTimeUrlExpirationTime time.Time, isInAutoRetry bool, allowCardUpdateOnSplititPortals bool, installmentsScheduleInterval int32) *InstallmentPlan {
	this := InstallmentPlan{}
	this.NumberOfInstallments = numberOfInstallments
	this.NumberOfProcessedInstallments = numberOfProcessedInstallments
	this.IsFullCaptured = isFullCaptured
	this.IsChargedBack = isChargedBack
	this.ArePaymentsOnHold = arePaymentsOnHold
	this.ScpFundingPercent = scpFundingPercent
	this.FundingStatus = fundingStatus
	this.TestMode = testMode
	this.CreationDateTime = creationDateTime
	this.LifeTimeUrlExpirationTime = lifeTimeUrlExpirationTime
	this.IsInAutoRetry = isInAutoRetry
	this.AllowCardUpdateOnSplititPortals = allowCardUpdateOnSplititPortals
	this.InstallmentsScheduleInterval = installmentsScheduleInterval
	return &this
}

// NewInstallmentPlanWithDefaults instantiates a new InstallmentPlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstallmentPlanWithDefaults() *InstallmentPlan {
	this := InstallmentPlan{}
	return &this
}

// GetInstallmentPlanNumber returns the InstallmentPlanNumber field value if set, zero value otherwise.
func (o *InstallmentPlan) GetInstallmentPlanNumber() string {
	if o == nil || isNil(o.InstallmentPlanNumber) {
		var ret string
		return ret
	}
	return *o.InstallmentPlanNumber
}

// GetInstallmentPlanNumberOk returns a tuple with the InstallmentPlanNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetInstallmentPlanNumberOk() (*string, bool) {
	if o == nil || isNil(o.InstallmentPlanNumber) {
    return nil, false
	}
	return o.InstallmentPlanNumber, true
}

// HasInstallmentPlanNumber returns a boolean if a field has been set.
func (o *InstallmentPlan) HasInstallmentPlanNumber() bool {
	if o != nil && !isNil(o.InstallmentPlanNumber) {
		return true
	}

	return false
}

// SetInstallmentPlanNumber gets a reference to the given string and assigns it to the InstallmentPlanNumber field.
func (o *InstallmentPlan) SetInstallmentPlanNumber(v string) {
	o.InstallmentPlanNumber = &v
}

// GetInstallmentPlanStatus returns the InstallmentPlanStatus field value if set, zero value otherwise.
func (o *InstallmentPlan) GetInstallmentPlanStatus() ReferenceEntityBase {
	if o == nil || isNil(o.InstallmentPlanStatus) {
		var ret ReferenceEntityBase
		return ret
	}
	return *o.InstallmentPlanStatus
}

// GetInstallmentPlanStatusOk returns a tuple with the InstallmentPlanStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetInstallmentPlanStatusOk() (*ReferenceEntityBase, bool) {
	if o == nil || isNil(o.InstallmentPlanStatus) {
    return nil, false
	}
	return o.InstallmentPlanStatus, true
}

// HasInstallmentPlanStatus returns a boolean if a field has been set.
func (o *InstallmentPlan) HasInstallmentPlanStatus() bool {
	if o != nil && !isNil(o.InstallmentPlanStatus) {
		return true
	}

	return false
}

// SetInstallmentPlanStatus gets a reference to the given ReferenceEntityBase and assigns it to the InstallmentPlanStatus field.
func (o *InstallmentPlan) SetInstallmentPlanStatus(v ReferenceEntityBase) {
	o.InstallmentPlanStatus = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *InstallmentPlan) GetAmount() Money {
	if o == nil || isNil(o.Amount) {
		var ret Money
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetAmountOk() (*Money, bool) {
	if o == nil || isNil(o.Amount) {
    return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *InstallmentPlan) HasAmount() bool {
	if o != nil && !isNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given Money and assigns it to the Amount field.
func (o *InstallmentPlan) SetAmount(v Money) {
	o.Amount = &v
}

// GetOutstandingAmount returns the OutstandingAmount field value if set, zero value otherwise.
func (o *InstallmentPlan) GetOutstandingAmount() Money {
	if o == nil || isNil(o.OutstandingAmount) {
		var ret Money
		return ret
	}
	return *o.OutstandingAmount
}

// GetOutstandingAmountOk returns a tuple with the OutstandingAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetOutstandingAmountOk() (*Money, bool) {
	if o == nil || isNil(o.OutstandingAmount) {
    return nil, false
	}
	return o.OutstandingAmount, true
}

// HasOutstandingAmount returns a boolean if a field has been set.
func (o *InstallmentPlan) HasOutstandingAmount() bool {
	if o != nil && !isNil(o.OutstandingAmount) {
		return true
	}

	return false
}

// SetOutstandingAmount gets a reference to the given Money and assigns it to the OutstandingAmount field.
func (o *InstallmentPlan) SetOutstandingAmount(v Money) {
	o.OutstandingAmount = &v
}

// GetDisputes returns the Disputes field value if set, zero value otherwise.
func (o *InstallmentPlan) GetDisputes() Disputes {
	if o == nil || isNil(o.Disputes) {
		var ret Disputes
		return ret
	}
	return *o.Disputes
}

// GetDisputesOk returns a tuple with the Disputes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetDisputesOk() (*Disputes, bool) {
	if o == nil || isNil(o.Disputes) {
    return nil, false
	}
	return o.Disputes, true
}

// HasDisputes returns a boolean if a field has been set.
func (o *InstallmentPlan) HasDisputes() bool {
	if o != nil && !isNil(o.Disputes) {
		return true
	}

	return false
}

// SetDisputes gets a reference to the given Disputes and assigns it to the Disputes field.
func (o *InstallmentPlan) SetDisputes(v Disputes) {
	o.Disputes = &v
}

// GetNumberOfInstallments returns the NumberOfInstallments field value
func (o *InstallmentPlan) GetNumberOfInstallments() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumberOfInstallments
}

// GetNumberOfInstallmentsOk returns a tuple with the NumberOfInstallments field value
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetNumberOfInstallmentsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.NumberOfInstallments, true
}

// SetNumberOfInstallments sets field value
func (o *InstallmentPlan) SetNumberOfInstallments(v int32) {
	o.NumberOfInstallments = v
}

// GetNumberOfProcessedInstallments returns the NumberOfProcessedInstallments field value
func (o *InstallmentPlan) GetNumberOfProcessedInstallments() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumberOfProcessedInstallments
}

// GetNumberOfProcessedInstallmentsOk returns a tuple with the NumberOfProcessedInstallments field value
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetNumberOfProcessedInstallmentsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.NumberOfProcessedInstallments, true
}

// SetNumberOfProcessedInstallments sets field value
func (o *InstallmentPlan) SetNumberOfProcessedInstallments(v int32) {
	o.NumberOfProcessedInstallments = v
}

// GetOriginalAmount returns the OriginalAmount field value if set, zero value otherwise.
func (o *InstallmentPlan) GetOriginalAmount() Money {
	if o == nil || isNil(o.OriginalAmount) {
		var ret Money
		return ret
	}
	return *o.OriginalAmount
}

// GetOriginalAmountOk returns a tuple with the OriginalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetOriginalAmountOk() (*Money, bool) {
	if o == nil || isNil(o.OriginalAmount) {
    return nil, false
	}
	return o.OriginalAmount, true
}

// HasOriginalAmount returns a boolean if a field has been set.
func (o *InstallmentPlan) HasOriginalAmount() bool {
	if o != nil && !isNil(o.OriginalAmount) {
		return true
	}

	return false
}

// SetOriginalAmount gets a reference to the given Money and assigns it to the OriginalAmount field.
func (o *InstallmentPlan) SetOriginalAmount(v Money) {
	o.OriginalAmount = &v
}

// GetRefundAmount returns the RefundAmount field value if set, zero value otherwise.
func (o *InstallmentPlan) GetRefundAmount() Money {
	if o == nil || isNil(o.RefundAmount) {
		var ret Money
		return ret
	}
	return *o.RefundAmount
}

// GetRefundAmountOk returns a tuple with the RefundAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetRefundAmountOk() (*Money, bool) {
	if o == nil || isNil(o.RefundAmount) {
    return nil, false
	}
	return o.RefundAmount, true
}

// HasRefundAmount returns a boolean if a field has been set.
func (o *InstallmentPlan) HasRefundAmount() bool {
	if o != nil && !isNil(o.RefundAmount) {
		return true
	}

	return false
}

// SetRefundAmount gets a reference to the given Money and assigns it to the RefundAmount field.
func (o *InstallmentPlan) SetRefundAmount(v Money) {
	o.RefundAmount = &v
}

// GetConsumer returns the Consumer field value if set, zero value otherwise.
func (o *InstallmentPlan) GetConsumer() ConsumerData {
	if o == nil || isNil(o.Consumer) {
		var ret ConsumerData
		return ret
	}
	return *o.Consumer
}

// GetConsumerOk returns a tuple with the Consumer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetConsumerOk() (*ConsumerData, bool) {
	if o == nil || isNil(o.Consumer) {
    return nil, false
	}
	return o.Consumer, true
}

// HasConsumer returns a boolean if a field has been set.
func (o *InstallmentPlan) HasConsumer() bool {
	if o != nil && !isNil(o.Consumer) {
		return true
	}

	return false
}

// SetConsumer gets a reference to the given ConsumerData and assigns it to the Consumer field.
func (o *InstallmentPlan) SetConsumer(v ConsumerData) {
	o.Consumer = &v
}

// GetActiveCard returns the ActiveCard field value if set, zero value otherwise.
func (o *InstallmentPlan) GetActiveCard() CardData2 {
	if o == nil || isNil(o.ActiveCard) {
		var ret CardData2
		return ret
	}
	return *o.ActiveCard
}

// GetActiveCardOk returns a tuple with the ActiveCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetActiveCardOk() (*CardData2, bool) {
	if o == nil || isNil(o.ActiveCard) {
    return nil, false
	}
	return o.ActiveCard, true
}

// HasActiveCard returns a boolean if a field has been set.
func (o *InstallmentPlan) HasActiveCard() bool {
	if o != nil && !isNil(o.ActiveCard) {
		return true
	}

	return false
}

// SetActiveCard gets a reference to the given CardData2 and assigns it to the ActiveCard field.
func (o *InstallmentPlan) SetActiveCard(v CardData2) {
	o.ActiveCard = &v
}

// GetFraudCheck returns the FraudCheck field value if set, zero value otherwise.
func (o *InstallmentPlan) GetFraudCheck() FraudCheck {
	if o == nil || isNil(o.FraudCheck) {
		var ret FraudCheck
		return ret
	}
	return *o.FraudCheck
}

// GetFraudCheckOk returns a tuple with the FraudCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetFraudCheckOk() (*FraudCheck, bool) {
	if o == nil || isNil(o.FraudCheck) {
    return nil, false
	}
	return o.FraudCheck, true
}

// HasFraudCheck returns a boolean if a field has been set.
func (o *InstallmentPlan) HasFraudCheck() bool {
	if o != nil && !isNil(o.FraudCheck) {
		return true
	}

	return false
}

// SetFraudCheck gets a reference to the given FraudCheck and assigns it to the FraudCheck field.
func (o *InstallmentPlan) SetFraudCheck(v FraudCheck) {
	o.FraudCheck = &v
}

// GetTerminal returns the Terminal field value if set, zero value otherwise.
func (o *InstallmentPlan) GetTerminal() TerminalRef {
	if o == nil || isNil(o.Terminal) {
		var ret TerminalRef
		return ret
	}
	return *o.Terminal
}

// GetTerminalOk returns a tuple with the Terminal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetTerminalOk() (*TerminalRef, bool) {
	if o == nil || isNil(o.Terminal) {
    return nil, false
	}
	return o.Terminal, true
}

// HasTerminal returns a boolean if a field has been set.
func (o *InstallmentPlan) HasTerminal() bool {
	if o != nil && !isNil(o.Terminal) {
		return true
	}

	return false
}

// SetTerminal gets a reference to the given TerminalRef and assigns it to the Terminal field.
func (o *InstallmentPlan) SetTerminal(v TerminalRef) {
	o.Terminal = &v
}

// GetMerchant returns the Merchant field value if set, zero value otherwise.
func (o *InstallmentPlan) GetMerchant() MerchantRef {
	if o == nil || isNil(o.Merchant) {
		var ret MerchantRef
		return ret
	}
	return *o.Merchant
}

// GetMerchantOk returns a tuple with the Merchant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetMerchantOk() (*MerchantRef, bool) {
	if o == nil || isNil(o.Merchant) {
    return nil, false
	}
	return o.Merchant, true
}

// HasMerchant returns a boolean if a field has been set.
func (o *InstallmentPlan) HasMerchant() bool {
	if o != nil && !isNil(o.Merchant) {
		return true
	}

	return false
}

// SetMerchant gets a reference to the given MerchantRef and assigns it to the Merchant field.
func (o *InstallmentPlan) SetMerchant(v MerchantRef) {
	o.Merchant = &v
}

// GetRefOrderNumber returns the RefOrderNumber field value if set, zero value otherwise.
func (o *InstallmentPlan) GetRefOrderNumber() string {
	if o == nil || isNil(o.RefOrderNumber) {
		var ret string
		return ret
	}
	return *o.RefOrderNumber
}

// GetRefOrderNumberOk returns a tuple with the RefOrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetRefOrderNumberOk() (*string, bool) {
	if o == nil || isNil(o.RefOrderNumber) {
    return nil, false
	}
	return o.RefOrderNumber, true
}

// HasRefOrderNumber returns a boolean if a field has been set.
func (o *InstallmentPlan) HasRefOrderNumber() bool {
	if o != nil && !isNil(o.RefOrderNumber) {
		return true
	}

	return false
}

// SetRefOrderNumber gets a reference to the given string and assigns it to the RefOrderNumber field.
func (o *InstallmentPlan) SetRefOrderNumber(v string) {
	o.RefOrderNumber = &v
}

// GetPurchaseMethod returns the PurchaseMethod field value if set, zero value otherwise.
func (o *InstallmentPlan) GetPurchaseMethod() ReferenceEntityBase {
	if o == nil || isNil(o.PurchaseMethod) {
		var ret ReferenceEntityBase
		return ret
	}
	return *o.PurchaseMethod
}

// GetPurchaseMethodOk returns a tuple with the PurchaseMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetPurchaseMethodOk() (*ReferenceEntityBase, bool) {
	if o == nil || isNil(o.PurchaseMethod) {
    return nil, false
	}
	return o.PurchaseMethod, true
}

// HasPurchaseMethod returns a boolean if a field has been set.
func (o *InstallmentPlan) HasPurchaseMethod() bool {
	if o != nil && !isNil(o.PurchaseMethod) {
		return true
	}

	return false
}

// SetPurchaseMethod gets a reference to the given ReferenceEntityBase and assigns it to the PurchaseMethod field.
func (o *InstallmentPlan) SetPurchaseMethod(v ReferenceEntityBase) {
	o.PurchaseMethod = &v
}

// GetStrategy returns the Strategy field value if set, zero value otherwise.
func (o *InstallmentPlan) GetStrategy() ReferenceEntityBase {
	if o == nil || isNil(o.Strategy) {
		var ret ReferenceEntityBase
		return ret
	}
	return *o.Strategy
}

// GetStrategyOk returns a tuple with the Strategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetStrategyOk() (*ReferenceEntityBase, bool) {
	if o == nil || isNil(o.Strategy) {
    return nil, false
	}
	return o.Strategy, true
}

// HasStrategy returns a boolean if a field has been set.
func (o *InstallmentPlan) HasStrategy() bool {
	if o != nil && !isNil(o.Strategy) {
		return true
	}

	return false
}

// SetStrategy gets a reference to the given ReferenceEntityBase and assigns it to the Strategy field.
func (o *InstallmentPlan) SetStrategy(v ReferenceEntityBase) {
	o.Strategy = &v
}

// GetDelayResolution returns the DelayResolution field value if set, zero value otherwise.
func (o *InstallmentPlan) GetDelayResolution() ReferenceEntityBase {
	if o == nil || isNil(o.DelayResolution) {
		var ret ReferenceEntityBase
		return ret
	}
	return *o.DelayResolution
}

// GetDelayResolutionOk returns a tuple with the DelayResolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetDelayResolutionOk() (*ReferenceEntityBase, bool) {
	if o == nil || isNil(o.DelayResolution) {
    return nil, false
	}
	return o.DelayResolution, true
}

// HasDelayResolution returns a boolean if a field has been set.
func (o *InstallmentPlan) HasDelayResolution() bool {
	if o != nil && !isNil(o.DelayResolution) {
		return true
	}

	return false
}

// SetDelayResolution gets a reference to the given ReferenceEntityBase and assigns it to the DelayResolution field.
func (o *InstallmentPlan) SetDelayResolution(v ReferenceEntityBase) {
	o.DelayResolution = &v
}

// GetExtendedParams returns the ExtendedParams field value if set, zero value otherwise.
func (o *InstallmentPlan) GetExtendedParams() map[string]string {
	if o == nil || isNil(o.ExtendedParams) {
		var ret map[string]string
		return ret
	}
	return *o.ExtendedParams
}

// GetExtendedParamsOk returns a tuple with the ExtendedParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetExtendedParamsOk() (*map[string]string, bool) {
	if o == nil || isNil(o.ExtendedParams) {
    return nil, false
	}
	return o.ExtendedParams, true
}

// HasExtendedParams returns a boolean if a field has been set.
func (o *InstallmentPlan) HasExtendedParams() bool {
	if o != nil && !isNil(o.ExtendedParams) {
		return true
	}

	return false
}

// SetExtendedParams gets a reference to the given map[string]string and assigns it to the ExtendedParams field.
func (o *InstallmentPlan) SetExtendedParams(v map[string]string) {
	o.ExtendedParams = &v
}

// GetIsFullCaptured returns the IsFullCaptured field value
func (o *InstallmentPlan) GetIsFullCaptured() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsFullCaptured
}

// GetIsFullCapturedOk returns a tuple with the IsFullCaptured field value
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetIsFullCapturedOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IsFullCaptured, true
}

// SetIsFullCaptured sets field value
func (o *InstallmentPlan) SetIsFullCaptured(v bool) {
	o.IsFullCaptured = v
}

// GetIsChargedBack returns the IsChargedBack field value
func (o *InstallmentPlan) GetIsChargedBack() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsChargedBack
}

// GetIsChargedBackOk returns a tuple with the IsChargedBack field value
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetIsChargedBackOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IsChargedBack, true
}

// SetIsChargedBack sets field value
func (o *InstallmentPlan) SetIsChargedBack(v bool) {
	o.IsChargedBack = v
}

// GetArePaymentsOnHold returns the ArePaymentsOnHold field value
func (o *InstallmentPlan) GetArePaymentsOnHold() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ArePaymentsOnHold
}

// GetArePaymentsOnHoldOk returns a tuple with the ArePaymentsOnHold field value
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetArePaymentsOnHoldOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ArePaymentsOnHold, true
}

// SetArePaymentsOnHold sets field value
func (o *InstallmentPlan) SetArePaymentsOnHold(v bool) {
	o.ArePaymentsOnHold = v
}

// GetScpFundingPercent returns the ScpFundingPercent field value
func (o *InstallmentPlan) GetScpFundingPercent() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ScpFundingPercent
}

// GetScpFundingPercentOk returns a tuple with the ScpFundingPercent field value
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetScpFundingPercentOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ScpFundingPercent, true
}

// SetScpFundingPercent sets field value
func (o *InstallmentPlan) SetScpFundingPercent(v float32) {
	o.ScpFundingPercent = v
}

// GetFundingStatus returns the FundingStatus field value
func (o *InstallmentPlan) GetFundingStatus() MoneyFlows {
	if o == nil {
		var ret MoneyFlows
		return ret
	}

	return o.FundingStatus
}

// GetFundingStatusOk returns a tuple with the FundingStatus field value
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetFundingStatusOk() (*MoneyFlows, bool) {
	if o == nil {
    return nil, false
	}
	return &o.FundingStatus, true
}

// SetFundingStatus sets field value
func (o *InstallmentPlan) SetFundingStatus(v MoneyFlows) {
	o.FundingStatus = v
}

// GetTestMode returns the TestMode field value
func (o *InstallmentPlan) GetTestMode() TestModes {
	if o == nil {
		var ret TestModes
		return ret
	}

	return o.TestMode
}

// GetTestModeOk returns a tuple with the TestMode field value
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetTestModeOk() (*TestModes, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TestMode, true
}

// SetTestMode sets field value
func (o *InstallmentPlan) SetTestMode(v TestModes) {
	o.TestMode = v
}

// GetCreationDateTime returns the CreationDateTime field value
func (o *InstallmentPlan) GetCreationDateTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreationDateTime
}

// GetCreationDateTimeOk returns a tuple with the CreationDateTime field value
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetCreationDateTimeOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CreationDateTime, true
}

// SetCreationDateTime sets field value
func (o *InstallmentPlan) SetCreationDateTime(v time.Time) {
	o.CreationDateTime = v
}

// GetLifeTimeUrlExpirationTime returns the LifeTimeUrlExpirationTime field value
func (o *InstallmentPlan) GetLifeTimeUrlExpirationTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LifeTimeUrlExpirationTime
}

// GetLifeTimeUrlExpirationTimeOk returns a tuple with the LifeTimeUrlExpirationTime field value
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetLifeTimeUrlExpirationTimeOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LifeTimeUrlExpirationTime, true
}

// SetLifeTimeUrlExpirationTime sets field value
func (o *InstallmentPlan) SetLifeTimeUrlExpirationTime(v time.Time) {
	o.LifeTimeUrlExpirationTime = v
}

// GetInstallments returns the Installments field value if set, zero value otherwise.
func (o *InstallmentPlan) GetInstallments() []Installment2 {
	if o == nil || isNil(o.Installments) {
		var ret []Installment2
		return ret
	}
	return o.Installments
}

// GetInstallmentsOk returns a tuple with the Installments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetInstallmentsOk() ([]Installment2, bool) {
	if o == nil || isNil(o.Installments) {
    return nil, false
	}
	return o.Installments, true
}

// HasInstallments returns a boolean if a field has been set.
func (o *InstallmentPlan) HasInstallments() bool {
	if o != nil && !isNil(o.Installments) {
		return true
	}

	return false
}

// SetInstallments gets a reference to the given []Installment2 and assigns it to the Installments field.
func (o *InstallmentPlan) SetInstallments(v []Installment2) {
	o.Installments = v
}

// GetSecureAuthorizations returns the SecureAuthorizations field value if set, zero value otherwise.
func (o *InstallmentPlan) GetSecureAuthorizations() []ReAuthorization {
	if o == nil || isNil(o.SecureAuthorizations) {
		var ret []ReAuthorization
		return ret
	}
	return o.SecureAuthorizations
}

// GetSecureAuthorizationsOk returns a tuple with the SecureAuthorizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetSecureAuthorizationsOk() ([]ReAuthorization, bool) {
	if o == nil || isNil(o.SecureAuthorizations) {
    return nil, false
	}
	return o.SecureAuthorizations, true
}

// HasSecureAuthorizations returns a boolean if a field has been set.
func (o *InstallmentPlan) HasSecureAuthorizations() bool {
	if o != nil && !isNil(o.SecureAuthorizations) {
		return true
	}

	return false
}

// SetSecureAuthorizations gets a reference to the given []ReAuthorization and assigns it to the SecureAuthorizations field.
func (o *InstallmentPlan) SetSecureAuthorizations(v []ReAuthorization) {
	o.SecureAuthorizations = v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *InstallmentPlan) GetLogoUrl() string {
	if o == nil || isNil(o.LogoUrl) {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetLogoUrlOk() (*string, bool) {
	if o == nil || isNil(o.LogoUrl) {
    return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *InstallmentPlan) HasLogoUrl() bool {
	if o != nil && !isNil(o.LogoUrl) {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *InstallmentPlan) SetLogoUrl(v string) {
	o.LogoUrl = &v
}

// GetIsInAutoRetry returns the IsInAutoRetry field value
func (o *InstallmentPlan) GetIsInAutoRetry() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsInAutoRetry
}

// GetIsInAutoRetryOk returns a tuple with the IsInAutoRetry field value
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetIsInAutoRetryOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IsInAutoRetry, true
}

// SetIsInAutoRetry sets field value
func (o *InstallmentPlan) SetIsInAutoRetry(v bool) {
	o.IsInAutoRetry = v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *InstallmentPlan) GetPaymentMethod() string {
	if o == nil || isNil(o.PaymentMethod) {
		var ret string
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetPaymentMethodOk() (*string, bool) {
	if o == nil || isNil(o.PaymentMethod) {
    return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *InstallmentPlan) HasPaymentMethod() bool {
	if o != nil && !isNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given string and assigns it to the PaymentMethod field.
func (o *InstallmentPlan) SetPaymentMethod(v string) {
	o.PaymentMethod = &v
}

// GetAllowCardUpdateOnSplititPortals returns the AllowCardUpdateOnSplititPortals field value
func (o *InstallmentPlan) GetAllowCardUpdateOnSplititPortals() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowCardUpdateOnSplititPortals
}

// GetAllowCardUpdateOnSplititPortalsOk returns a tuple with the AllowCardUpdateOnSplititPortals field value
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetAllowCardUpdateOnSplititPortalsOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AllowCardUpdateOnSplititPortals, true
}

// SetAllowCardUpdateOnSplititPortals sets field value
func (o *InstallmentPlan) SetAllowCardUpdateOnSplititPortals(v bool) {
	o.AllowCardUpdateOnSplititPortals = v
}

// GetOnHoldLastOpenDate returns the OnHoldLastOpenDate field value if set, zero value otherwise.
func (o *InstallmentPlan) GetOnHoldLastOpenDate() time.Time {
	if o == nil || isNil(o.OnHoldLastOpenDate) {
		var ret time.Time
		return ret
	}
	return *o.OnHoldLastOpenDate
}

// GetOnHoldLastOpenDateOk returns a tuple with the OnHoldLastOpenDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetOnHoldLastOpenDateOk() (*time.Time, bool) {
	if o == nil || isNil(o.OnHoldLastOpenDate) {
    return nil, false
	}
	return o.OnHoldLastOpenDate, true
}

// HasOnHoldLastOpenDate returns a boolean if a field has been set.
func (o *InstallmentPlan) HasOnHoldLastOpenDate() bool {
	if o != nil && !isNil(o.OnHoldLastOpenDate) {
		return true
	}

	return false
}

// SetOnHoldLastOpenDate gets a reference to the given time.Time and assigns it to the OnHoldLastOpenDate field.
func (o *InstallmentPlan) SetOnHoldLastOpenDate(v time.Time) {
	o.OnHoldLastOpenDate = &v
}

// GetOnHoldLastOpenUserId returns the OnHoldLastOpenUserId field value if set, zero value otherwise.
func (o *InstallmentPlan) GetOnHoldLastOpenUserId() string {
	if o == nil || isNil(o.OnHoldLastOpenUserId) {
		var ret string
		return ret
	}
	return *o.OnHoldLastOpenUserId
}

// GetOnHoldLastOpenUserIdOk returns a tuple with the OnHoldLastOpenUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetOnHoldLastOpenUserIdOk() (*string, bool) {
	if o == nil || isNil(o.OnHoldLastOpenUserId) {
    return nil, false
	}
	return o.OnHoldLastOpenUserId, true
}

// HasOnHoldLastOpenUserId returns a boolean if a field has been set.
func (o *InstallmentPlan) HasOnHoldLastOpenUserId() bool {
	if o != nil && !isNil(o.OnHoldLastOpenUserId) {
		return true
	}

	return false
}

// SetOnHoldLastOpenUserId gets a reference to the given string and assigns it to the OnHoldLastOpenUserId field.
func (o *InstallmentPlan) SetOnHoldLastOpenUserId(v string) {
	o.OnHoldLastOpenUserId = &v
}

// GetInstallmentsScheduleInterval returns the InstallmentsScheduleInterval field value
func (o *InstallmentPlan) GetInstallmentsScheduleInterval() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.InstallmentsScheduleInterval
}

// GetInstallmentsScheduleIntervalOk returns a tuple with the InstallmentsScheduleInterval field value
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetInstallmentsScheduleIntervalOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.InstallmentsScheduleInterval, true
}

// SetInstallmentsScheduleInterval sets field value
func (o *InstallmentPlan) SetInstallmentsScheduleInterval(v int32) {
	o.InstallmentsScheduleInterval = v
}

// GetExternalPaymentProvider returns the ExternalPaymentProvider field value if set, zero value otherwise.
func (o *InstallmentPlan) GetExternalPaymentProvider() ExternalProviderTypes {
	if o == nil || isNil(o.ExternalPaymentProvider) {
		var ret ExternalProviderTypes
		return ret
	}
	return *o.ExternalPaymentProvider
}

// GetExternalPaymentProviderOk returns a tuple with the ExternalPaymentProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentPlan) GetExternalPaymentProviderOk() (*ExternalProviderTypes, bool) {
	if o == nil || isNil(o.ExternalPaymentProvider) {
    return nil, false
	}
	return o.ExternalPaymentProvider, true
}

// HasExternalPaymentProvider returns a boolean if a field has been set.
func (o *InstallmentPlan) HasExternalPaymentProvider() bool {
	if o != nil && !isNil(o.ExternalPaymentProvider) {
		return true
	}

	return false
}

// SetExternalPaymentProvider gets a reference to the given ExternalProviderTypes and assigns it to the ExternalPaymentProvider field.
func (o *InstallmentPlan) SetExternalPaymentProvider(v ExternalProviderTypes) {
	o.ExternalPaymentProvider = &v
}

func (o InstallmentPlan) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.InstallmentPlanNumber) {
		toSerialize["InstallmentPlanNumber"] = o.InstallmentPlanNumber
	}
	if !isNil(o.InstallmentPlanStatus) {
		toSerialize["InstallmentPlanStatus"] = o.InstallmentPlanStatus
	}
	if !isNil(o.Amount) {
		toSerialize["Amount"] = o.Amount
	}
	if !isNil(o.OutstandingAmount) {
		toSerialize["OutstandingAmount"] = o.OutstandingAmount
	}
	if !isNil(o.Disputes) {
		toSerialize["Disputes"] = o.Disputes
	}
	if true {
		toSerialize["NumberOfInstallments"] = o.NumberOfInstallments
	}
	if true {
		toSerialize["NumberOfProcessedInstallments"] = o.NumberOfProcessedInstallments
	}
	if !isNil(o.OriginalAmount) {
		toSerialize["OriginalAmount"] = o.OriginalAmount
	}
	if !isNil(o.RefundAmount) {
		toSerialize["RefundAmount"] = o.RefundAmount
	}
	if !isNil(o.Consumer) {
		toSerialize["Consumer"] = o.Consumer
	}
	if !isNil(o.ActiveCard) {
		toSerialize["ActiveCard"] = o.ActiveCard
	}
	if !isNil(o.FraudCheck) {
		toSerialize["FraudCheck"] = o.FraudCheck
	}
	if !isNil(o.Terminal) {
		toSerialize["Terminal"] = o.Terminal
	}
	if !isNil(o.Merchant) {
		toSerialize["Merchant"] = o.Merchant
	}
	if !isNil(o.RefOrderNumber) {
		toSerialize["RefOrderNumber"] = o.RefOrderNumber
	}
	if !isNil(o.PurchaseMethod) {
		toSerialize["PurchaseMethod"] = o.PurchaseMethod
	}
	if !isNil(o.Strategy) {
		toSerialize["Strategy"] = o.Strategy
	}
	if !isNil(o.DelayResolution) {
		toSerialize["DelayResolution"] = o.DelayResolution
	}
	if !isNil(o.ExtendedParams) {
		toSerialize["ExtendedParams"] = o.ExtendedParams
	}
	if true {
		toSerialize["IsFullCaptured"] = o.IsFullCaptured
	}
	if true {
		toSerialize["IsChargedBack"] = o.IsChargedBack
	}
	if true {
		toSerialize["ArePaymentsOnHold"] = o.ArePaymentsOnHold
	}
	if true {
		toSerialize["ScpFundingPercent"] = o.ScpFundingPercent
	}
	if true {
		toSerialize["FundingStatus"] = o.FundingStatus
	}
	if true {
		toSerialize["TestMode"] = o.TestMode
	}
	if true {
		toSerialize["CreationDateTime"] = o.CreationDateTime
	}
	if true {
		toSerialize["LifeTimeUrlExpirationTime"] = o.LifeTimeUrlExpirationTime
	}
	if !isNil(o.Installments) {
		toSerialize["Installments"] = o.Installments
	}
	if !isNil(o.SecureAuthorizations) {
		toSerialize["SecureAuthorizations"] = o.SecureAuthorizations
	}
	if !isNil(o.LogoUrl) {
		toSerialize["LogoUrl"] = o.LogoUrl
	}
	if true {
		toSerialize["IsInAutoRetry"] = o.IsInAutoRetry
	}
	if !isNil(o.PaymentMethod) {
		toSerialize["PaymentMethod"] = o.PaymentMethod
	}
	if true {
		toSerialize["AllowCardUpdateOnSplititPortals"] = o.AllowCardUpdateOnSplititPortals
	}
	if !isNil(o.OnHoldLastOpenDate) {
		toSerialize["OnHoldLastOpenDate"] = o.OnHoldLastOpenDate
	}
	if !isNil(o.OnHoldLastOpenUserId) {
		toSerialize["OnHoldLastOpenUserId"] = o.OnHoldLastOpenUserId
	}
	if true {
		toSerialize["InstallmentsScheduleInterval"] = o.InstallmentsScheduleInterval
	}
	if !isNil(o.ExternalPaymentProvider) {
		toSerialize["ExternalPaymentProvider"] = o.ExternalPaymentProvider
	}
	return json.Marshal(toSerialize)
}

type NullableInstallmentPlan struct {
	value *InstallmentPlan
	isSet bool
}

func (v NullableInstallmentPlan) Get() *InstallmentPlan {
	return v.value
}

func (v *NullableInstallmentPlan) Set(val *InstallmentPlan) {
	v.value = val
	v.isSet = true
}

func (v NullableInstallmentPlan) IsSet() bool {
	return v.isSet
}

func (v *NullableInstallmentPlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstallmentPlan(val *InstallmentPlan) *NullableInstallmentPlan {
	return &NullableInstallmentPlan{value: val, isSet: true}
}

func (v NullableInstallmentPlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstallmentPlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


