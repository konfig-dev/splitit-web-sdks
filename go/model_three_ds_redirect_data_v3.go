/*
splitit-web-api-v3

Splitit's Web API

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package splitit

import (
	"encoding/json"
)

// ThreeDsRedirectDataV3 struct for ThreeDsRedirectDataV3
type ThreeDsRedirectDataV3 struct {
	Url *string `json:"Url,omitempty"`
	Verb *string `json:"Verb,omitempty"`
	Params *map[string]string `json:"Params,omitempty"`
	ClientRedirectUrl *string `json:"ClientRedirectUrl,omitempty"`
}

// NewThreeDsRedirectDataV3 instantiates a new ThreeDsRedirectDataV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThreeDsRedirectDataV3() *ThreeDsRedirectDataV3 {
	this := ThreeDsRedirectDataV3{}
	return &this
}

// NewThreeDsRedirectDataV3WithDefaults instantiates a new ThreeDsRedirectDataV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThreeDsRedirectDataV3WithDefaults() *ThreeDsRedirectDataV3 {
	this := ThreeDsRedirectDataV3{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ThreeDsRedirectDataV3) GetUrl() string {
	if o == nil || isNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDsRedirectDataV3) GetUrlOk() (*string, bool) {
	if o == nil || isNil(o.Url) {
    return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ThreeDsRedirectDataV3) HasUrl() bool {
	if o != nil && !isNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ThreeDsRedirectDataV3) SetUrl(v string) {
	o.Url = &v
}

// GetVerb returns the Verb field value if set, zero value otherwise.
func (o *ThreeDsRedirectDataV3) GetVerb() string {
	if o == nil || isNil(o.Verb) {
		var ret string
		return ret
	}
	return *o.Verb
}

// GetVerbOk returns a tuple with the Verb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDsRedirectDataV3) GetVerbOk() (*string, bool) {
	if o == nil || isNil(o.Verb) {
    return nil, false
	}
	return o.Verb, true
}

// HasVerb returns a boolean if a field has been set.
func (o *ThreeDsRedirectDataV3) HasVerb() bool {
	if o != nil && !isNil(o.Verb) {
		return true
	}

	return false
}

// SetVerb gets a reference to the given string and assigns it to the Verb field.
func (o *ThreeDsRedirectDataV3) SetVerb(v string) {
	o.Verb = &v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *ThreeDsRedirectDataV3) GetParams() map[string]string {
	if o == nil || isNil(o.Params) {
		var ret map[string]string
		return ret
	}
	return *o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDsRedirectDataV3) GetParamsOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Params) {
    return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *ThreeDsRedirectDataV3) HasParams() bool {
	if o != nil && !isNil(o.Params) {
		return true
	}

	return false
}

// SetParams gets a reference to the given map[string]string and assigns it to the Params field.
func (o *ThreeDsRedirectDataV3) SetParams(v map[string]string) {
	o.Params = &v
}

// GetClientRedirectUrl returns the ClientRedirectUrl field value if set, zero value otherwise.
func (o *ThreeDsRedirectDataV3) GetClientRedirectUrl() string {
	if o == nil || isNil(o.ClientRedirectUrl) {
		var ret string
		return ret
	}
	return *o.ClientRedirectUrl
}

// GetClientRedirectUrlOk returns a tuple with the ClientRedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDsRedirectDataV3) GetClientRedirectUrlOk() (*string, bool) {
	if o == nil || isNil(o.ClientRedirectUrl) {
    return nil, false
	}
	return o.ClientRedirectUrl, true
}

// HasClientRedirectUrl returns a boolean if a field has been set.
func (o *ThreeDsRedirectDataV3) HasClientRedirectUrl() bool {
	if o != nil && !isNil(o.ClientRedirectUrl) {
		return true
	}

	return false
}

// SetClientRedirectUrl gets a reference to the given string and assigns it to the ClientRedirectUrl field.
func (o *ThreeDsRedirectDataV3) SetClientRedirectUrl(v string) {
	o.ClientRedirectUrl = &v
}

func (o ThreeDsRedirectDataV3) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Url) {
		toSerialize["Url"] = o.Url
	}
	if !isNil(o.Verb) {
		toSerialize["Verb"] = o.Verb
	}
	if !isNil(o.Params) {
		toSerialize["Params"] = o.Params
	}
	if !isNil(o.ClientRedirectUrl) {
		toSerialize["ClientRedirectUrl"] = o.ClientRedirectUrl
	}
	return json.Marshal(toSerialize)
}

type NullableThreeDsRedirectDataV3 struct {
	value *ThreeDsRedirectDataV3
	isSet bool
}

func (v NullableThreeDsRedirectDataV3) Get() *ThreeDsRedirectDataV3 {
	return v.value
}

func (v *NullableThreeDsRedirectDataV3) Set(val *ThreeDsRedirectDataV3) {
	v.value = val
	v.isSet = true
}

func (v NullableThreeDsRedirectDataV3) IsSet() bool {
	return v.isSet
}

func (v *NullableThreeDsRedirectDataV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThreeDsRedirectDataV3(val *ThreeDsRedirectDataV3) *NullableThreeDsRedirectDataV3 {
	return &NullableThreeDsRedirectDataV3{value: val, isSet: true}
}

func (v NullableThreeDsRedirectDataV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThreeDsRedirectDataV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


