/*
 * splitit-web-api-v3
 *
 * Splitit's Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://konfigthis.com
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Splitit.Web.Net.Client.OpenAPIDateConverter;

namespace Splitit.Web.Net.Model
{
    /// <summary>
    /// LinksModel
    /// </summary>
    [DataContract(Name = "LinksModel")]
    public partial class LinksModel : IEquatable<LinksModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LinksModel" /> class.
        /// </summary>
        /// <param name="privacyPolicyUrl">privacyPolicyUrl.</param>
        /// <param name="termsAndConditionsUrl">termsAndConditionsUrl.</param>
        /// <param name="learnMoreUrl">learnMoreUrl.</param>
        public LinksModel(string privacyPolicyUrl = default(string), string termsAndConditionsUrl = default(string), string learnMoreUrl = default(string))
        {
            this.PrivacyPolicyUrl = privacyPolicyUrl;
            this.TermsAndConditionsUrl = termsAndConditionsUrl;
            this.LearnMoreUrl = learnMoreUrl;
        }

        /// <summary>
        /// Gets or Sets PrivacyPolicyUrl
        /// </summary>
        [DataMember(Name = "PrivacyPolicyUrl", EmitDefaultValue = false)]
        public string PrivacyPolicyUrl { get; set; }

        /// <summary>
        /// Gets or Sets TermsAndConditionsUrl
        /// </summary>
        [DataMember(Name = "TermsAndConditionsUrl", EmitDefaultValue = false)]
        public string TermsAndConditionsUrl { get; set; }

        /// <summary>
        /// Gets or Sets LearnMoreUrl
        /// </summary>
        [DataMember(Name = "LearnMoreUrl", EmitDefaultValue = false)]
        public string LearnMoreUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LinksModel {\n");
            sb.Append("  PrivacyPolicyUrl: ").Append(PrivacyPolicyUrl).Append("\n");
            sb.Append("  TermsAndConditionsUrl: ").Append(TermsAndConditionsUrl).Append("\n");
            sb.Append("  LearnMoreUrl: ").Append(LearnMoreUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LinksModel);
        }

        /// <summary>
        /// Returns true if LinksModel instances are equal
        /// </summary>
        /// <param name="input">Instance of LinksModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LinksModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.PrivacyPolicyUrl == input.PrivacyPolicyUrl ||
                    (this.PrivacyPolicyUrl != null &&
                    this.PrivacyPolicyUrl.Equals(input.PrivacyPolicyUrl))
                ) && 
                (
                    this.TermsAndConditionsUrl == input.TermsAndConditionsUrl ||
                    (this.TermsAndConditionsUrl != null &&
                    this.TermsAndConditionsUrl.Equals(input.TermsAndConditionsUrl))
                ) && 
                (
                    this.LearnMoreUrl == input.LearnMoreUrl ||
                    (this.LearnMoreUrl != null &&
                    this.LearnMoreUrl.Equals(input.LearnMoreUrl))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PrivacyPolicyUrl != null)
                {
                    hashCode = (hashCode * 59) + this.PrivacyPolicyUrl.GetHashCode();
                }
                if (this.TermsAndConditionsUrl != null)
                {
                    hashCode = (hashCode * 59) + this.TermsAndConditionsUrl.GetHashCode();
                }
                if (this.LearnMoreUrl != null)
                {
                    hashCode = (hashCode * 59) + this.LearnMoreUrl.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
