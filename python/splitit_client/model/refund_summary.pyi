# coding: utf-8

"""
    splitit-web-api-v3

    Splitit's Web API

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from splitit_client import schemas  # noqa: F401


class RefundSummary(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            TotalAmount = schemas.NumberSchema
            FailedAmount = schemas.NumberSchema
            SucceededAmount = schemas.NumberSchema
            PendingAmount = schemas.NumberSchema
            __annotations__ = {
                "TotalAmount": TotalAmount,
                "FailedAmount": FailedAmount,
                "SucceededAmount": SucceededAmount,
                "PendingAmount": PendingAmount,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["TotalAmount"]) -> MetaOapg.properties.TotalAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["FailedAmount"]) -> MetaOapg.properties.FailedAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SucceededAmount"]) -> MetaOapg.properties.SucceededAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PendingAmount"]) -> MetaOapg.properties.PendingAmount: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["TotalAmount", "FailedAmount", "SucceededAmount", "PendingAmount", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["TotalAmount"]) -> typing.Union[MetaOapg.properties.TotalAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["FailedAmount"]) -> typing.Union[MetaOapg.properties.FailedAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SucceededAmount"]) -> typing.Union[MetaOapg.properties.SucceededAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PendingAmount"]) -> typing.Union[MetaOapg.properties.PendingAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["TotalAmount", "FailedAmount", "SucceededAmount", "PendingAmount", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        TotalAmount: typing.Union[MetaOapg.properties.TotalAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        FailedAmount: typing.Union[MetaOapg.properties.FailedAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        SucceededAmount: typing.Union[MetaOapg.properties.SucceededAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        PendingAmount: typing.Union[MetaOapg.properties.PendingAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'RefundSummary':
        return super().__new__(
            cls,
            *args,
            TotalAmount=TotalAmount,
            FailedAmount=FailedAmount,
            SucceededAmount=SucceededAmount,
            PendingAmount=PendingAmount,
            _configuration=_configuration,
            **kwargs,
        )
