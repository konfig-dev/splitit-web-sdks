{
  "openapi": "3.0.0",
  "info": {
    "title": "splitit-web-api-v3",
    "description": "Splitit's Web API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://web-api-v3.production.splitit.com"
    }
  ],
  "tags": "undefined",
  "paths": {
    "/api/installmentplans/{installmentPlanNumber}": {
      "get": {
        "tags": [
          "Fetch Plans"
        ],
        "summary": "Fetch Plan by Number",
        "operationId": "InstallmentPlan_Get",
        "security": [
          {
            "oauth": [
              "api.v3"
            ]
          }
        ],
        "description": "Retrieve an installment plan's information by providing its number in your path.",
        "parameters": [
          {
            "name": "installmentPlanNumber",
            "in": "path",
            "required": true,
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Splitit-IdempotencyKey",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "TouchPoint",
            "name": "X-Splitit-TouchPoint",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanGetResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanGetResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/installmentplans/search": {
      "get": {
        "tags": [
          "Fetch Plans"
        ],
        "summary": "Fetch Plan(s) by Alternate Field",
        "operationId": "InstallmentPlan_Search",
        "security": [
          {
            "oauth": [
              "api.v3"
            ]
          }
        ],
        "description": "Retrieves a plan by RefOrderNumber or ExtendedParams. Note that RefOrderNumber or ExtendedParams were optionally specified by you upon plan creation.",
        "parameters": [
          {
            "name": "installmentPlanNumber",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refOrderNumber",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extendedParams",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "X-Splitit-IdempotencyKey",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "TouchPoint",
            "name": "X-Splitit-TouchPoint",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanSearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanSearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanSearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/installmentplans/initiate": {
      "post": {
        "tags": [
          "Start Plans (Splitit Forms)"
        ],
        "summary": "Initiate Installment Plan",
        "operationId": "InstallmentPlan_Post",
        "security": [
          {
            "oauth": [
              "api.v3"
            ]
          }
        ],
        "description": "Initiate establishes an installment plan but doesn't finalize it, and is thus intended for use with Splitit premade checkout solutions such as Payment Forms or Flex Form. Initiate only requires SAQ-A certification. You can call it multiple times for the same installment plan, since each time a new API call is made, existing data will be updated and new values will be appended to the existing plan. Note that for funded plans, a customer's BillingAddress object must be filled out.",
        "parameters": [
          {
            "name": "X-Splitit-TestMode",
            "x-originalName": "testMode",
            "in": "header",
            "x-schema": {
              "$ref": "#/components/schemas/TestModes"
            },
            "x-nullable": true,
            "schema": {
              "type": "string",
              "enum": [
                "None",
                "Regular",
                "Fast",
                "Automation"
              ]
            }
          },
          {
            "name": "X-Splitit-IdempotencyKey",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "TouchPoint",
            "name": "X-Splitit-TouchPoint",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InstallmentPlanInitiateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstallmentPlanInitiateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InstallmentPlanInitiateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InstallmentPlanInitiateRequest"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InitiatePlanResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitiatePlanResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitiatePlanResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PlanErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/installmentplans": {
      "post": {
        "tags": [
          "Start Plans (Direct API)"
        ],
        "summary": "Create Installment Plan",
        "operationId": "InstallmentPlan_Post2",
        "security": [
          {
            "oauth": [
              "api.v3"
            ]
          }
        ],
        "description": "Once you are ready to check your customer out, you can use the Create endpoint. Create enables you to pass in PCI sensitive data directly to the Splitit API, and thus requires SAQ-D PCI certification.\nA successful Create operation creates an authorization on a customer's credit card, and if AutoCapture has been set to true within the request body, both authorization and capture of the first installment will be completed (if AutoCapture is set to false, you will have to call Update Plan later). If Splitit is unable to successfully secure an authorization on a credit card, an error message will be returned in the response. Note that for funded plans, a customer's BillingAddress object must be filled out. In addition, if you are completely managing the input of PCI sensitive data on your side, it’s essential to ensure your customer has approved the Splitit specific terms and conditions.\n",
        "parameters": [
          {
            "name": "X-Splitit-TestMode",
            "x-originalName": "testMode",
            "in": "header",
            "x-schema": {
              "$ref": "#/components/schemas/TestModes"
            },
            "x-nullable": true,
            "schema": {
              "type": "string",
              "enum": [
                "None",
                "Regular",
                "Fast",
                "Automation"
              ]
            }
          },
          {
            "name": "X-Splitit-IdempotencyKey",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "TouchPoint",
            "name": "X-Splitit-TouchPoint",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InstallmentPlanCreateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstallmentPlanCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InstallmentPlanCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InstallmentPlanCreateRequest"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanCreateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanCreateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PlanErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/installmentplans/{installmentPlanNumber}/verifyauthorization": {
      "get": {
        "tags": [
          "Start Plans (Splitit Forms)"
        ],
        "summary": "Verify Authorization",
        "operationId": "InstallmentPlan_VerifyAuthorization",
        "security": [
          {
            "oauth": [
              "api.v3"
            ]
          }
        ],
        "description": "You must call Verify Authorization in cases when plan authorization and order closure do not happen simultaneously. An example of this would be when a customer checks out with a Payment Form or Flex Form, or is redirected for 3DS. To call it, you need to provide the plan number you received in the success response from Initiate.",
        "parameters": [
          {
            "name": "installmentPlanNumber",
            "in": "path",
            "required": true,
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Splitit-IdempotencyKey",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "TouchPoint",
            "name": "X-Splitit-TouchPoint",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyAuthorizationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyAuthorizationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyAuthorizationResponse"
                }
              }
            }
          },
          "401": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/installmentplans/{installmentPlanNumber}/updateorder": {
      "put": {
        "tags": [
          "Maintain Plans"
        ],
        "summary": "Update Plan by Number",
        "operationId": "InstallmentPlan_UpdateOrder",
        "security": [
          {
            "oauth": [
              "api.v3"
            ]
          }
        ],
        "description": "Locate a plan by installment number then carry out post-authorization activities related to the plan, such as updating the order number, updating the tracking number, or updating shipping status. You can also use this endpoint to capture the first installment from a plan that has only been authorized but not yet captured.",
        "parameters": [
          {
            "name": "installmentPlanNumber",
            "in": "path",
            "required": true,
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Splitit-IdempotencyKey",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "TouchPoint",
            "name": "X-Splitit-TouchPoint",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderRequest"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanUpdateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanUpdateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanUpdateResponse"
                }
              }
            }
          },
          "401": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/installmentplans/updateorder": {
      "put": {
        "tags": [
          "Maintain Plans"
        ],
        "summary": "Update Plan By Alternate Field",
        "operationId": "InstallmentPlan_UpdateOrder2",
        "security": [
          {
            "oauth": [
              "api.v3"
            ]
          }
        ],
        "description": "Locate a plan by RefOrderNumber or ExtendedParams then carry out post-authorization activities related to the plan, such as updating the order number, updating the tracking number, or updating shipping status. You can also use this endpoint to capture the first installment from a plan that has only been authorized but not yet captured. Note that RefOrderNumber or ExtendedParams were optionally specified by you upon plan creation.",
        "parameters": [
          {
            "name": "X-Splitit-IdempotencyKey",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "TouchPoint",
            "name": "X-Splitit-TouchPoint",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InstallmentPlanUpdateRequestByIdentifier"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstallmentPlanUpdateRequestByIdentifier"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InstallmentPlanUpdateRequestByIdentifier"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InstallmentPlanUpdateRequestByIdentifier"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanUpdateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanUpdateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanUpdateResponse"
                }
              }
            }
          },
          "401": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/installmentplans/{installmentPlanNumber}/refund": {
      "post": {
        "tags": [
          "Maintain Plans"
        ],
        "summary": "Refund a Plan",
        "operationId": "InstallmentPlan_Refund",
        "security": [
          {
            "oauth": [
              "api.v3"
            ]
          }
        ],
        "description": "Refund part or all of an installment Plan.\n\nStrategies\nThere are several refund strategies you can choose when refunding a plan (note that the default is FutureInstallmentsFirst):\n\n- FutureInstallmentsFirst: At first customer isn’t refunded any installment money that they have already paid. Instead their refund lessens the amount of future installments they will be debited for, beginning with the next installment that is due. However, if their refund exceeds the amount of money they have left to pay (all installments), only then is the refund taken out of the installment money they have already paid\n- FutureInstallmentsLast: Customer is refunded beginning with the installment money they have already paid. If their refund amount exceeds the amount they have already paid, their amount of future installments due gets decreased, beginning with the next installment due and then proceeding to the later ones\n- FutureInstallmentsNotAllowed: Customer is only refunded from installment money that they have already paid, not from any future installments that they have due\n- ReduceFromLastInstallment: This is the same as FutureInstallmentsFirst, except that the refund is credited starting with the last installment first (e.g., number 6 of 6, as opposed to number 2 of 6).\n",
        "parameters": [
          {
            "name": "installmentPlanNumber",
            "in": "path",
            "required": true,
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Splitit-IdempotencyKey",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "TouchPoint",
            "name": "X-Splitit-TouchPoint",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InstallmentPlanRefundRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstallmentPlanRefundRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InstallmentPlanRefundRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InstallmentPlanRefundRequest"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanRefundResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanRefundResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanRefundResponse"
                }
              }
            }
          },
          "401": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/installmentplans/{installmentPlanNumber}/cancel": {
      "post": {
        "tags": [
          "Maintain Plans"
        ],
        "summary": "Cancel a Plan",
        "operationId": "InstallmentPlan_Cancel",
        "security": [
          {
            "oauth": [
              "api.v3"
            ]
          }
        ],
        "description": "The Cancel operation allows you to cancel an existing installment plan.",
        "parameters": [
          {
            "name": "installmentPlanNumber",
            "in": "path",
            "required": true,
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Splitit-IdempotencyKey",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "TouchPoint",
            "name": "X-Splitit-TouchPoint",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanCancelResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanCancelResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentPlanCancelResponse"
                }
              }
            }
          },
          "401": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/installmentplans/check-eligibility": {
      "post": {
        "tags": [
          "Start Plans (Direct API)"
        ],
        "summary": "Check Eligibility",
        "operationId": "InstallmentPlan_CheckEligibility",
        "security": [
          {
            "oauth": [
              "api.v3"
            ]
          }
        ],
        "description": "As your customer beings to checkout, use this endpoint to verify their overall eligibility for Splitit installment plans and to determine plans for which they are eligible. This endpoint can be called repeatedly before and during checkout, for example you may call it after each field on a page is filled out. The Splitit API compares and updates the plan based on each new body as it arrives.",
        "parameters": [
          {
            "name": "X-Splitit-IdempotencyKey",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "TouchPoint",
            "name": "X-Splitit-TouchPoint",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckInstallmentsEligibilityRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckInstallmentsEligibilityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckInstallmentsEligibilityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckInstallmentsEligibilityRequest"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentsEligibilityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentsEligibilityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentsEligibilityResponse"
                }
              }
            }
          },
          "401": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "x-nullable": false,
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "FailedResponse": {
        "type": "object",
        "properties": {
          "TraceId": {
            "type": "string"
          },
          "Error": {
            "$ref": "#/components/schemas/ErrorExtended"
          }
        }
      },
      "ErrorExtended": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "ExtraData": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string"
          },
          "Message": {
            "type": "string"
          },
          "AdditionalInfo": {
            "type": "string"
          }
        }
      },
      "InstallmentPlanGetResponse": {
        "type": "object",
        "required": [
          "DateCreated",
          "Status"
        ],
        "properties": {
          "InstallmentPlanNumber": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "RefOrderNumber": {
            "type": "string"
          },
          "PurchaseMethod": {
            "$ref": "#/components/schemas/PurchaseMethod"
          },
          "Status": {
            "$ref": "#/components/schemas/PlanStatus"
          },
          "Currency": {
            "type": "string"
          },
          "OriginalAmount": {
            "type": "number",
            "format": "decimal"
          },
          "Amount": {
            "type": "number",
            "format": "decimal"
          },
          "Authorization": {
            "$ref": "#/components/schemas/AuthorizationModel"
          },
          "Shopper": {
            "$ref": "#/components/schemas/ShopperData"
          },
          "BillingAddress": {
            "$ref": "#/components/schemas/AddressData"
          },
          "PaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodModel"
          },
          "ExtendedParams": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "Installments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Installment"
            }
          },
          "Refunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundModel"
            }
          },
          "Links": {
            "$ref": "#/components/schemas/LinksData"
          }
        }
      },
      "PurchaseMethod": {
        "description": "",
        "type": "string",
        "x-enumNames": [
          "InStore",
          "PhoneOrder",
          "ECommerce"
        ],
        "enum": [
          "InStore",
          "PhoneOrder",
          "ECommerce"
        ]
      },
      "PlanStatus": {
        "description": "",
        "type": "string",
        "x-enumNames": [
          "Initialized",
          "PendingCapture",
          "Active",
          "Cleared",
          "Canceled"
        ],
        "enum": [
          "Initialized",
          "PendingCapture",
          "Active",
          "Cleared",
          "Canceled"
        ]
      },
      "AuthorizationModel": {
        "type": "object",
        "required": [
          "Status"
        ],
        "properties": {
          "Status": {
            "$ref": "#/components/schemas/GwAuthorizationStatus"
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "SplititErrorResultCode": {
            "type": "string"
          },
          "GatewayTransactionID": {
            "type": "string"
          },
          "GatewayResultCode": {
            "type": "string"
          },
          "GatewayResultMessage": {
            "type": "string"
          },
          "ThreeDSRedirect": {
            "$ref": "#/components/schemas/ThreeDsRedirectDataV3"
          },
          "CAVV": {
            "type": "string"
          },
          "ECI": {
            "type": "string"
          },
          "GatewaySourceResponse": {
            "type": "string"
          }
        }
      },
      "GwAuthorizationStatus": {
        "description": "",
        "type": "string",
        "x-enumNames": [
          "NA",
          "Succeeded",
          "Pending3DS",
          "Failed"
        ],
        "enum": [
          "NA",
          "Succeeded",
          "Pending3DS",
          "Failed"
        ]
      },
      "ThreeDsRedirectDataV3": {
        "type": "object",
        "properties": {
          "Url": {
            "type": "string"
          },
          "Verb": {
            "type": "string"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ShopperData": {
        "type": "object",
        "properties": {
          "FullName": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "PhoneNumber": {
            "type": "string"
          },
          "Culture": {
            "type": "string"
          }
        }
      },
      "AddressData": {
        "type": "object",
        "properties": {
          "AddressLine": {
            "type": "string"
          },
          "AddressLine2": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "Country": {
            "type": "string"
          },
          "State": {
            "type": "string"
          },
          "Zip": {
            "type": "string"
          }
        }
      },
      "PaymentMethodModel": {
        "type": "object",
        "required": [
          "Type"
        ],
        "properties": {
          "Type": {
            "$ref": "#/components/schemas/PaymentMethodType"
          },
          "Card": {
            "$ref": "#/components/schemas/CardData"
          },
          "Token": {
            "type": "string"
          },
          "BluesnapVaultedShopperToken": {
            "$ref": "#/components/schemas/BluesnapVaultedShopperToken"
          },
          "MockerShopperToken": {
            "$ref": "#/components/schemas/MockerShopperToken"
          }
        }
      },
      "PaymentMethodType": {
        "description": "",
        "type": "string",
        "x-enumNames": [
          "Card",
          "SplititToken",
          "BluesnapVaultedShopperToken",
          "SplititMockerV2Token"
        ],
        "enum": [
          "Card",
          "SplititToken",
          "BluesnapVaultedShopperToken",
          "SplititMockerV2Token"
        ]
      },
      "CardData": {
        "type": "object",
        "properties": {
          "CardHolderFullName": {
            "type": "string"
          },
          "CardNumber": {
            "type": "string"
          },
          "CardExpYear": {
            "type": "string"
          },
          "CardExpMonth": {
            "type": "string"
          },
          "CardCvv": {
            "type": "string"
          },
          "CardBrand": {
            "$ref": "#/components/schemas/CardBrand"
          },
          "CardType": {
            "$ref": "#/components/schemas/CardType"
          }
        }
      },
      "CardBrand": {
        "description": "",
        "type": "string",
        "x-enumNames": [
          "Mastercard",
          "Visa",
          "AmericanExpress",
          "Maestro",
          "JCB",
          "CUP",
          "UPI",
          "Discover",
          "Other"
        ],
        "enum": [
          "Mastercard",
          "Visa",
          "AmericanExpress",
          "Maestro",
          "JCB",
          "CUP",
          "UPI",
          "Discover",
          "Other"
        ]
      },
      "CardType": {
        "description": "",
        "type": "string",
        "x-enumNames": [
          "Credit",
          "Debit",
          "Charge",
          "Other",
          "Prepaid",
          "VisaDeferredDebit",
          "NetworkOnly"
        ],
        "enum": [
          "Credit",
          "Debit",
          "Charge",
          "Other",
          "Prepaid",
          "VisaDeferredDebit",
          "NetworkOnly"
        ]
      },
      "BluesnapVaultedShopperToken": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GatewayTokenData"
          },
          {
            "type": "object"
          }
        ]
      },
      "GatewayTokenData": {
        "type": "object",
        "x-abstract": true,
        "properties": {
          "Token": {
            "type": "string"
          },
          "Last4Digit": {
            "type": "string"
          }
        }
      },
      "MockerShopperToken": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GatewayTokenData"
          },
          {
            "type": "object"
          }
        ]
      },
      "Installment": {
        "type": "object",
        "required": [
          "InstallmentNumber",
          "Amount",
          "Status"
        ],
        "properties": {
          "InstallmentNumber": {
            "type": "integer",
            "format": "int32"
          },
          "Amount": {
            "type": "number",
            "format": "decimal"
          },
          "ProcessDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "Status": {
            "$ref": "#/components/schemas/InstallmentStatus"
          }
        }
      },
      "InstallmentStatus": {
        "description": "",
        "type": "string",
        "x-enumNames": [
          "Pending",
          "Processed",
          "Canceled"
        ],
        "enum": [
          "Pending",
          "Processed",
          "Canceled"
        ]
      },
      "RefundModel": {
        "type": "object",
        "required": [
          "SubmitDate",
          "TotalAmount",
          "Status",
          "NonCreditRefundAmount",
          "CreditRefundAmount"
        ],
        "properties": {
          "RefundId": {
            "type": "string"
          },
          "SubmitDate": {
            "type": "string",
            "format": "date-time"
          },
          "TotalAmount": {
            "type": "number",
            "format": "decimal"
          },
          "Status": {
            "$ref": "#/components/schemas/RefundStatus"
          },
          "NonCreditRefundAmount": {
            "type": "number",
            "format": "decimal"
          },
          "CreditRefundAmount": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "RefundStatus": {
        "description": "",
        "type": "string",
        "x-enumNames": [
          "Pending",
          "Succeeded",
          "Failed"
        ],
        "enum": [
          "Pending",
          "Succeeded",
          "Failed"
        ]
      },
      "LinksData": {
        "type": "object",
        "properties": {
          "Checkout": {
            "type": "string"
          },
          "LearnMore": {
            "type": "string"
          },
          "TermsConditions": {
            "type": "string"
          },
          "PrivacyPolicy": {
            "type": "string"
          }
        }
      },
      "InstallmentPlanSearchResponse": {
        "type": "object",
        "properties": {
          "PlanList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchInstallmentPlanResponseItem"
            }
          }
        }
      },
      "SearchInstallmentPlanResponseItem": {
        "type": "object",
        "required": [
          "DateCreated",
          "Status"
        ],
        "properties": {
          "InstallmentPlanNumber": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "RefOrderNumber": {
            "type": "string"
          },
          "PurchaseMethod": {
            "$ref": "#/components/schemas/PurchaseMethod"
          },
          "Status": {
            "$ref": "#/components/schemas/PlanStatus"
          },
          "Currency": {
            "type": "string"
          },
          "OriginalAmount": {
            "type": "number",
            "format": "decimal"
          },
          "Amount": {
            "type": "number",
            "format": "decimal"
          },
          "Authorization": {
            "$ref": "#/components/schemas/AuthorizationModel"
          },
          "Shopper": {
            "$ref": "#/components/schemas/ShopperData"
          },
          "BillingAddress": {
            "$ref": "#/components/schemas/AddressData"
          },
          "PaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodModel"
          },
          "ExtendedParams": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "Installments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Installment"
            }
          },
          "Refunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundModel"
            }
          },
          "Links": {
            "$ref": "#/components/schemas/LinksData"
          }
        }
      },
      "InitiatePlanResponse": {
        "type": "object",
        "required": [
          "Status"
        ],
        "properties": {
          "InstallmentPlanNumber": {
            "type": "string"
          },
          "RefOrderNumber": {
            "type": "string"
          },
          "PurchaseMethod": {
            "$ref": "#/components/schemas/PurchaseMethod"
          },
          "Status": {
            "$ref": "#/components/schemas/PlanStatus"
          },
          "Currency": {
            "type": "string"
          },
          "Amount": {
            "type": "number",
            "format": "decimal"
          },
          "ExtendedParams": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "Shopper": {
            "$ref": "#/components/schemas/ShopperData"
          },
          "BillingAddress": {
            "$ref": "#/components/schemas/AddressData"
          },
          "CheckoutUrl": {
            "type": "string"
          }
        }
      },
      "PlanErrorResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FailedResponse"
          },
          {
            "type": "object",
            "properties": {
              "InstallmentPlanNumber": {
                "type": "string"
              }
            }
          }
        ]
      },
      "InstallmentPlanInitiateRequest": {
        "type": "object",
        "required": [
          "AutoCapture"
        ],
        "properties": {
          "AutoCapture": {
            "type": "boolean"
          },
          "Attempt3dSecure": {
            "type": "boolean"
          },
          "Shopper": {
            "$ref": "#/components/schemas/ShopperData"
          },
          "PlanData": {
            "$ref": "#/components/schemas/PlanDataModel"
          },
          "BillingAddress": {
            "$ref": "#/components/schemas/AddressDataModel"
          },
          "RedirectUrls": {
            "$ref": "#/components/schemas/InitiateRedirectionEndpointsModel"
          },
          "UxSettings": {
            "$ref": "#/components/schemas/UxSettingsModel"
          },
          "EventsEndpoints": {
            "$ref": "#/components/schemas/EventsEndpointsModel"
          },
          "ProcessingData": {
            "$ref": "#/components/schemas/ProcessingData"
          }
        }
      },
      "PlanDataModel": {
        "type": "object",
        "required": [
          "TotalAmount",
          "PurchaseMethod"
        ],
        "properties": {
          "TotalAmount": {
            "type": "number",
            "format": "decimal"
          },
          "Currency": {
            "type": "string"
          },
          "NumberOfInstallments": {
            "type": "integer",
            "format": "int32"
          },
          "TerminalId": {
            "type": "string"
          },
          "PurchaseMethod": {
            "$ref": "#/components/schemas/PurchaseMethod"
          },
          "RefOrderNumber": {
            "type": "string"
          },
          "ExtendedParams": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "FirstInstallmentAmount": {
            "type": "number",
            "format": "decimal"
          },
          "FirstInstallmentDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AddressDataModel": {
        "type": "object",
        "properties": {
          "AddressLine1": {
            "type": "string"
          },
          "AddressLine2": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "Country": {
            "type": "string"
          },
          "State": {
            "type": "string"
          },
          "Zip": {
            "type": "string"
          }
        }
      },
      "InitiateRedirectionEndpointsModel": {
        "type": "object",
        "properties": {
          "Succeeded": {
            "type": "string"
          },
          "Failed": {
            "type": "string"
          },
          "Cancel": {
            "type": "string"
          }
        }
      },
      "UxSettingsModel": {
        "type": "object",
        "properties": {
          "DisplayedInstallmentOptions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "EventsEndpointsModel": {
        "type": "object",
        "properties": {
          "CreateSucceeded": {
            "type": "string"
          }
        }
      },
      "ProcessingData": {
        "type": "object",
        "properties": {
          "AttemptThreeDSecured": {
            "type": "boolean"
          },
          "SoftDescriptor": {
            "type": "string"
          },
          "ThreeDSData": {
            "$ref": "#/components/schemas/ThreeDSData"
          }
        }
      },
      "ThreeDSData": {
        "type": "object",
        "properties": {
          "ECI": {
            "type": "string"
          },
          "CAVV": {
            "type": "string"
          },
          "XID": {
            "type": "string"
          },
          "DirectoryServerTxnId": {
            "type": "string"
          },
          "ThreeDSVersion": {
            "type": "string"
          },
          "TransactionId": {
            "type": "string"
          }
        }
      },
      "TestModes": {
        "description": "",
        "type": "string",
        "x-enumNames": [
          "None",
          "Regular",
          "Fast",
          "Automation"
        ],
        "enum": [
          "None",
          "Regular",
          "Fast",
          "Automation"
        ]
      },
      "InstallmentPlanCreateResponse": {
        "type": "object",
        "required": [
          "DateCreated",
          "Status"
        ],
        "properties": {
          "InstallmentPlanNumber": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "RefOrderNumber": {
            "type": "string"
          },
          "PurchaseMethod": {
            "$ref": "#/components/schemas/PurchaseMethod"
          },
          "Status": {
            "$ref": "#/components/schemas/PlanStatus"
          },
          "Currency": {
            "type": "string"
          },
          "OriginalAmount": {
            "type": "number",
            "format": "decimal"
          },
          "Amount": {
            "type": "number",
            "format": "decimal"
          },
          "ExtendedParams": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "Authorization": {
            "$ref": "#/components/schemas/AuthorizationModel"
          },
          "Shopper": {
            "$ref": "#/components/schemas/ShopperData"
          },
          "BillingAddress": {
            "$ref": "#/components/schemas/AddressData"
          },
          "PaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodModel"
          },
          "Installments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Installment"
            }
          },
          "Links": {
            "$ref": "#/components/schemas/LinksData"
          }
        }
      },
      "InstallmentPlanCreateRequest": {
        "type": "object",
        "required": [
          "AutoCapture",
          "TermsAndConditionsAccepted"
        ],
        "properties": {
          "AutoCapture": {
            "type": "boolean"
          },
          "Attempt3dSecure": {
            "type": "boolean"
          },
          "TermsAndConditionsAccepted": {
            "type": "boolean"
          },
          "Shopper": {
            "$ref": "#/components/schemas/ShopperData"
          },
          "PlanData": {
            "$ref": "#/components/schemas/PlanDataModel"
          },
          "BillingAddress": {
            "$ref": "#/components/schemas/AddressDataModel"
          },
          "PaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodModel"
          },
          "RedirectUrls": {
            "$ref": "#/components/schemas/RedirectionEndpointsModel"
          },
          "ProcessingData": {
            "$ref": "#/components/schemas/ProcessingData"
          },
          "EventsEndpoints": {
            "$ref": "#/components/schemas/EventsEndpointsModel"
          }
        }
      },
      "RedirectionEndpointsModel": {
        "type": "object",
        "properties": {
          "AuthorizeSucceeded": {
            "type": "string",
            "x-deprecated": true,
            "x-deprecatedMessage": "Please use Succeeded property"
          },
          "Succeeded": {
            "type": "string"
          },
          "AuthorizeFailed": {
            "type": "string",
            "x-deprecated": true,
            "x-deprecatedMessage": "Please use Failed property"
          },
          "Failed": {
            "type": "string"
          }
        }
      },
      "VerifyAuthorizationResponse": {
        "type": "object",
        "required": [
          "IsAuthorized"
        ],
        "properties": {
          "IsAuthorized": {
            "type": "boolean"
          },
          "AuthorizationAmount": {
            "type": "number",
            "format": "decimal"
          },
          "Authorization": {
            "$ref": "#/components/schemas/AuthorizationModel"
          }
        }
      },
      "InstallmentPlanUpdateResponse": {
        "type": "object",
        "required": [
          "Status",
          "ShippingStatus"
        ],
        "properties": {
          "RefOrderNumber": {
            "type": "string"
          },
          "InstallmentPlanNumber": {
            "type": "string"
          },
          "Status": {
            "$ref": "#/components/schemas/PlanStatus"
          },
          "ShippingStatus": {
            "$ref": "#/components/schemas/ShippingStatus"
          }
        }
      },
      "ShippingStatus": {
        "description": "",
        "type": "string",
        "x-enumNames": [
          "Pending",
          "Shipped",
          "Delivered"
        ],
        "enum": [
          "Pending",
          "Shipped",
          "Delivered"
        ]
      },
      "UpdateOrderRequest": {
        "type": "object",
        "properties": {
          "TrackingNumber": {
            "type": "string"
          },
          "RefOrderNumber": {
            "type": "string"
          },
          "ShippingStatus": {
            "$ref": "#/components/schemas/ShippingStatus"
          },
          "Capture": {
            "type": "boolean"
          }
        }
      },
      "InstallmentPlanUpdateRequestByIdentifier": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InstallmentPlanUpdateRequest"
          },
          {
            "type": "object",
            "properties": {
              "Identifier": {
                "$ref": "#/components/schemas/IdentifierContract"
              }
            }
          }
        ]
      },
      "IdentifierContract": {
        "type": "object",
        "properties": {
          "RefOrderNumber": {
            "type": "string"
          },
          "InstallmentPlanNumber": {
            "type": "string"
          },
          "ExtendedParams": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "InstallmentPlanUpdateRequest": {
        "type": "object",
        "properties": {
          "RefOrderNumber": {
            "type": "string"
          },
          "TrackingNumber": {
            "type": "string"
          },
          "Capture": {
            "type": "boolean"
          },
          "ShippingStatus": {
            "$ref": "#/components/schemas/ShippingStatus2"
          }
        }
      },
      "ShippingStatus2": {
        "description": "",
        "type": "string",
        "x-enumNames": [
          "Shipped",
          "Delivered"
        ],
        "enum": [
          "Shipped",
          "Delivered"
        ]
      },
      "InstallmentPlanRefundResponse": {
        "type": "object",
        "properties": {
          "RefundId": {
            "type": "string"
          },
          "InstallmentPlanNumber": {
            "type": "string"
          },
          "Currency": {
            "type": "string"
          },
          "NonCreditRefundAmount": {
            "type": "number",
            "format": "decimal"
          },
          "CreditRefundAmount": {
            "type": "number",
            "format": "decimal"
          },
          "Summary": {
            "$ref": "#/components/schemas/RefundSummary"
          }
        }
      },
      "RefundSummary": {
        "type": "object",
        "properties": {
          "TotalAmount": {
            "type": "number",
            "format": "decimal"
          },
          "FailedAmount": {
            "type": "number",
            "format": "decimal"
          },
          "SucceededAmount": {
            "type": "number",
            "format": "decimal"
          },
          "PendingAmount": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "InstallmentPlanRefundRequest": {
        "type": "object",
        "required": [
          "Amount"
        ],
        "properties": {
          "Amount": {
            "type": "number",
            "format": "decimal"
          },
          "RefundStrategy": {
            "$ref": "#/components/schemas/RefundStrategy"
          }
        }
      },
      "RefundStrategy": {
        "description": "",
        "type": "string",
        "x-enumNames": [
          "FutureInstallmentsFirst",
          "FutureInstallmentsLast",
          "FutureInstallmentsNotAllowed",
          "ReduceFromLastInstallment"
        ],
        "enum": [
          "FutureInstallmentsFirst",
          "FutureInstallmentsLast",
          "FutureInstallmentsNotAllowed",
          "ReduceFromLastInstallment"
        ]
      },
      "InstallmentPlanCancelResponse": {
        "type": "object",
        "properties": {
          "InstallmentPlanNumber": {
            "type": "string"
          }
        }
      },
      "InstallmentsEligibilityResponse": {
        "type": "object",
        "properties": {
          "InstallmentProvider": {
            "type": "string"
          },
          "PaymentPlanOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlanOptionModel"
            }
          }
        }
      },
      "PaymentPlanOptionModel": {
        "type": "object",
        "required": [
          "NumberOfInstallments",
          "FirstInstallmentAmount",
          "InstallmentAmount",
          "LastInstallmentAmount"
        ],
        "properties": {
          "NumberOfInstallments": {
            "type": "integer",
            "format": "int32"
          },
          "FirstInstallmentAmount": {
            "type": "number",
            "format": "decimal"
          },
          "InstallmentAmount": {
            "type": "number",
            "format": "decimal"
          },
          "LastInstallmentAmount": {
            "type": "number",
            "format": "decimal"
          },
          "Links": {
            "$ref": "#/components/schemas/LinksModel"
          },
          "TermsAndConditionsBrief": {
            "type": "string"
          },
          "InstallmentFrequency": {
            "type": "string"
          }
        }
      },
      "LinksModel": {
        "type": "object",
        "properties": {
          "PrivacyPolicyUrl": {
            "type": "string"
          },
          "TermsAndConditionsUrl": {
            "type": "string"
          },
          "LearnMoreUrl": {
            "type": "string"
          }
        }
      },
      "CheckInstallmentsEligibilityRequest": {
        "type": "object",
        "properties": {
          "PlanData": {
            "$ref": "#/components/schemas/PlanData"
          },
          "CardDetails": {
            "$ref": "#/components/schemas/CardData"
          },
          "BillingAddress": {
            "$ref": "#/components/schemas/AddressData"
          }
        }
      },
      "PlanData": {
        "type": "object",
        "required": [
          "TotalAmount",
          "NumberOfInstallments",
          "PurchaseMethod"
        ],
        "properties": {
          "TerminalId": {
            "type": "string"
          },
          "TotalAmount": {
            "type": "number",
            "format": "decimal"
          },
          "FirstInstallmentAmount": {
            "type": "number",
            "format": "decimal"
          },
          "Currency": {
            "type": "string"
          },
          "NumberOfInstallments": {
            "type": "integer",
            "format": "int32"
          },
          "PurchaseMethod": {
            "$ref": "#/components/schemas/PurchaseMethod"
          },
          "RefOrderNumber": {
            "type": "string"
          },
          "AllowedInstallmentOptions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "Tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "ProcessingData": {
            "$ref": "#/components/schemas/ProcessingData2"
          },
          "FirstInstallmentDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProcessingData2": {
        "type": "object",
        "properties": {
          "AttemptThreeDSecured": {
            "type": "boolean"
          },
          "SoftDescriptor": {
            "type": "string"
          },
          "ThreeDSData": {
            "$ref": "#/components/schemas/ThreeDSData2"
          }
        }
      },
      "ThreeDSData2": {
        "type": "object",
        "properties": {
          "ECI": {
            "type": "string"
          },
          "CAVV": {
            "type": "string"
          },
          "XID": {
            "type": "string"
          },
          "DirectoryServerTxnId": {
            "type": "string"
          },
          "ThreeDSVersion": {
            "type": "string"
          },
          "TransactionId": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://id.production.splitit.com/connect/token",
            "scopes": {
              "api.v3": ""
            }
          }
        }
      }
    }
  },
  "x-generator": "NSwag v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))"
}