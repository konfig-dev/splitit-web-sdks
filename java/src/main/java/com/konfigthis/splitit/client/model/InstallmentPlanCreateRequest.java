/*
 * splitit-web-api-v3
 * Splitit's API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.splitit.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.splitit.client.model.AddressDataModel;
import com.konfigthis.splitit.client.model.PaymentMethodModel;
import com.konfigthis.splitit.client.model.PlanDataModel;
import com.konfigthis.splitit.client.model.RedirectionEndpointsModel;
import com.konfigthis.splitit.client.model.ShopperData;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.splitit.client.JSON;

/**
 * InstallmentPlanCreateRequest
 */
@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class InstallmentPlanCreateRequest {
  public static final String SERIALIZED_NAME_AUTO_CAPTURE = "AutoCapture";
  @SerializedName(SERIALIZED_NAME_AUTO_CAPTURE)
  private Boolean autoCapture;

  public static final String SERIALIZED_NAME_ATTEMPT3D_SECURE = "Attempt3dSecure";
  @SerializedName(SERIALIZED_NAME_ATTEMPT3D_SECURE)
  private Boolean attempt3dSecure;

  public static final String SERIALIZED_NAME_ATTEMPT_AUTHORIZE = "AttemptAuthorize";
  @SerializedName(SERIALIZED_NAME_ATTEMPT_AUTHORIZE)
  private Boolean attemptAuthorize;

  public static final String SERIALIZED_NAME_TERMS_AND_CONDITIONS_ACCEPTED = "TermsAndConditionsAccepted";
  @SerializedName(SERIALIZED_NAME_TERMS_AND_CONDITIONS_ACCEPTED)
  private Boolean termsAndConditionsAccepted;

  public static final String SERIALIZED_NAME_SHOPPER = "Shopper";
  @SerializedName(SERIALIZED_NAME_SHOPPER)
  private ShopperData shopper;

  public static final String SERIALIZED_NAME_PLAN_DATA = "PlanData";
  @SerializedName(SERIALIZED_NAME_PLAN_DATA)
  private PlanDataModel planData;

  public static final String SERIALIZED_NAME_BILLING_ADDRESS = "BillingAddress";
  @SerializedName(SERIALIZED_NAME_BILLING_ADDRESS)
  private AddressDataModel billingAddress;

  public static final String SERIALIZED_NAME_PAYMENT_METHOD = "PaymentMethod";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD)
  private PaymentMethodModel paymentMethod;

  public static final String SERIALIZED_NAME_REDIRECT_URLS = "RedirectUrls";
  @SerializedName(SERIALIZED_NAME_REDIRECT_URLS)
  private RedirectionEndpointsModel redirectUrls;

  public InstallmentPlanCreateRequest() {
  }

  public InstallmentPlanCreateRequest autoCapture(Boolean autoCapture) {
    
    this.autoCapture = autoCapture;
    return this;
  }

   /**
   * Get autoCapture
   * @return autoCapture
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getAutoCapture() {
    return autoCapture;
  }


  public void setAutoCapture(Boolean autoCapture) {
    this.autoCapture = autoCapture;
  }


  public InstallmentPlanCreateRequest attempt3dSecure(Boolean attempt3dSecure) {
    
    this.attempt3dSecure = attempt3dSecure;
    return this;
  }

   /**
   * Get attempt3dSecure
   * @return attempt3dSecure
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getAttempt3dSecure() {
    return attempt3dSecure;
  }


  public void setAttempt3dSecure(Boolean attempt3dSecure) {
    this.attempt3dSecure = attempt3dSecure;
  }


  public InstallmentPlanCreateRequest attemptAuthorize(Boolean attemptAuthorize) {
    
    this.attemptAuthorize = attemptAuthorize;
    return this;
  }

   /**
   * Get attemptAuthorize
   * @return attemptAuthorize
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getAttemptAuthorize() {
    return attemptAuthorize;
  }


  public void setAttemptAuthorize(Boolean attemptAuthorize) {
    this.attemptAuthorize = attemptAuthorize;
  }


  public InstallmentPlanCreateRequest termsAndConditionsAccepted(Boolean termsAndConditionsAccepted) {
    
    this.termsAndConditionsAccepted = termsAndConditionsAccepted;
    return this;
  }

   /**
   * Get termsAndConditionsAccepted
   * @return termsAndConditionsAccepted
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getTermsAndConditionsAccepted() {
    return termsAndConditionsAccepted;
  }


  public void setTermsAndConditionsAccepted(Boolean termsAndConditionsAccepted) {
    this.termsAndConditionsAccepted = termsAndConditionsAccepted;
  }


  public InstallmentPlanCreateRequest shopper(ShopperData shopper) {
    
    this.shopper = shopper;
    return this;
  }

   /**
   * Get shopper
   * @return shopper
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ShopperData getShopper() {
    return shopper;
  }


  public void setShopper(ShopperData shopper) {
    this.shopper = shopper;
  }


  public InstallmentPlanCreateRequest planData(PlanDataModel planData) {
    
    this.planData = planData;
    return this;
  }

   /**
   * Get planData
   * @return planData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PlanDataModel getPlanData() {
    return planData;
  }


  public void setPlanData(PlanDataModel planData) {
    this.planData = planData;
  }


  public InstallmentPlanCreateRequest billingAddress(AddressDataModel billingAddress) {
    
    this.billingAddress = billingAddress;
    return this;
  }

   /**
   * Get billingAddress
   * @return billingAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AddressDataModel getBillingAddress() {
    return billingAddress;
  }


  public void setBillingAddress(AddressDataModel billingAddress) {
    this.billingAddress = billingAddress;
  }


  public InstallmentPlanCreateRequest paymentMethod(PaymentMethodModel paymentMethod) {
    
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * Get paymentMethod
   * @return paymentMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PaymentMethodModel getPaymentMethod() {
    return paymentMethod;
  }


  public void setPaymentMethod(PaymentMethodModel paymentMethod) {
    this.paymentMethod = paymentMethod;
  }


  public InstallmentPlanCreateRequest redirectUrls(RedirectionEndpointsModel redirectUrls) {
    
    this.redirectUrls = redirectUrls;
    return this;
  }

   /**
   * Get redirectUrls
   * @return redirectUrls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RedirectionEndpointsModel getRedirectUrls() {
    return redirectUrls;
  }


  public void setRedirectUrls(RedirectionEndpointsModel redirectUrls) {
    this.redirectUrls = redirectUrls;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstallmentPlanCreateRequest installmentPlanCreateRequest = (InstallmentPlanCreateRequest) o;
    return Objects.equals(this.autoCapture, installmentPlanCreateRequest.autoCapture) &&
        Objects.equals(this.attempt3dSecure, installmentPlanCreateRequest.attempt3dSecure) &&
        Objects.equals(this.attemptAuthorize, installmentPlanCreateRequest.attemptAuthorize) &&
        Objects.equals(this.termsAndConditionsAccepted, installmentPlanCreateRequest.termsAndConditionsAccepted) &&
        Objects.equals(this.shopper, installmentPlanCreateRequest.shopper) &&
        Objects.equals(this.planData, installmentPlanCreateRequest.planData) &&
        Objects.equals(this.billingAddress, installmentPlanCreateRequest.billingAddress) &&
        Objects.equals(this.paymentMethod, installmentPlanCreateRequest.paymentMethod) &&
        Objects.equals(this.redirectUrls, installmentPlanCreateRequest.redirectUrls);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoCapture, attempt3dSecure, attemptAuthorize, termsAndConditionsAccepted, shopper, planData, billingAddress, paymentMethod, redirectUrls);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstallmentPlanCreateRequest {\n");
    sb.append("    autoCapture: ").append(toIndentedString(autoCapture)).append("\n");
    sb.append("    attempt3dSecure: ").append(toIndentedString(attempt3dSecure)).append("\n");
    sb.append("    attemptAuthorize: ").append(toIndentedString(attemptAuthorize)).append("\n");
    sb.append("    termsAndConditionsAccepted: ").append(toIndentedString(termsAndConditionsAccepted)).append("\n");
    sb.append("    shopper: ").append(toIndentedString(shopper)).append("\n");
    sb.append("    planData: ").append(toIndentedString(planData)).append("\n");
    sb.append("    billingAddress: ").append(toIndentedString(billingAddress)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    redirectUrls: ").append(toIndentedString(redirectUrls)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AutoCapture");
    openapiFields.add("Attempt3dSecure");
    openapiFields.add("AttemptAuthorize");
    openapiFields.add("TermsAndConditionsAccepted");
    openapiFields.add("Shopper");
    openapiFields.add("PlanData");
    openapiFields.add("BillingAddress");
    openapiFields.add("PaymentMethod");
    openapiFields.add("RedirectUrls");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("AutoCapture");
    openapiRequiredFields.add("Attempt3dSecure");
    openapiRequiredFields.add("AttemptAuthorize");
    openapiRequiredFields.add("TermsAndConditionsAccepted");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to InstallmentPlanCreateRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!InstallmentPlanCreateRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InstallmentPlanCreateRequest is not found in the empty JSON string", InstallmentPlanCreateRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!InstallmentPlanCreateRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InstallmentPlanCreateRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : InstallmentPlanCreateRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the optional field `Shopper`
      if (jsonObj.get("Shopper") != null && !jsonObj.get("Shopper").isJsonNull()) {
        ShopperData.validateJsonObject(jsonObj.getAsJsonObject("Shopper"));
      }
      // validate the optional field `PlanData`
      if (jsonObj.get("PlanData") != null && !jsonObj.get("PlanData").isJsonNull()) {
        PlanDataModel.validateJsonObject(jsonObj.getAsJsonObject("PlanData"));
      }
      // validate the optional field `BillingAddress`
      if (jsonObj.get("BillingAddress") != null && !jsonObj.get("BillingAddress").isJsonNull()) {
        AddressDataModel.validateJsonObject(jsonObj.getAsJsonObject("BillingAddress"));
      }
      // validate the optional field `PaymentMethod`
      if (jsonObj.get("PaymentMethod") != null && !jsonObj.get("PaymentMethod").isJsonNull()) {
        PaymentMethodModel.validateJsonObject(jsonObj.getAsJsonObject("PaymentMethod"));
      }
      // validate the optional field `RedirectUrls`
      if (jsonObj.get("RedirectUrls") != null && !jsonObj.get("RedirectUrls").isJsonNull()) {
        RedirectionEndpointsModel.validateJsonObject(jsonObj.getAsJsonObject("RedirectUrls"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InstallmentPlanCreateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InstallmentPlanCreateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InstallmentPlanCreateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InstallmentPlanCreateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<InstallmentPlanCreateRequest>() {
           @Override
           public void write(JsonWriter out, InstallmentPlanCreateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InstallmentPlanCreateRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of InstallmentPlanCreateRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of InstallmentPlanCreateRequest
  * @throws IOException if the JSON string is invalid with respect to InstallmentPlanCreateRequest
  */
  public static InstallmentPlanCreateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InstallmentPlanCreateRequest.class);
  }

 /**
  * Convert an instance of InstallmentPlanCreateRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

